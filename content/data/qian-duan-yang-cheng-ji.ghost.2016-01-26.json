{"meta":{"exported_on":1453797068238,"version":"003"},"data":{"posts":[{"id":2,"uuid":"ab670f12-312e-4d44-94bc-e653c2b262a7","title":"你好，前端世界！","slug":"hello-world","markdown":"今天开始，**《前端养成记》正式上线啦** —— 关于网页重构、前端开发、设计等。\n\n想知道，前端小白如何一步步成长？这里或许可以告诉你！\n\n与我一起来探索前端世界呗。\n\n![explorer](/content/images/2015/10/bg-1366.jpg)\n\n>图片来源：[Medium.com](https://medium.com)","html":"<p>今天开始，<strong>《前端养成记》正式上线啦</strong> —— 关于网页重构、前端开发、设计等。</p>\n\n<p>想知道，前端小白如何一步步成长？这里或许可以告诉你！</p>\n\n<p>与我一起来探索前端世界呗。</p>\n\n<p><img src=\"/content/images/2015/10/bg-1366.jpg\" alt=\"explorer\" /></p>\n\n<blockquote>\n  <p>图片来源：<a href=\"https://medium.com\">Medium.com</a></p>\n</blockquote>","image":"/content/images/2015/10/bg-1366-1.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":"前端养成记，正式启用！","meta_description":"前端养成记，正式启用啦！关于网页重构，前端开发，设计等……想知道，前端小白如何一步步成长？这里或许可以告诉你！","author_id":1,"created_at":1446196727160,"created_by":1,"updated_at":1446363652364,"updated_by":1,"published_at":1446196991138,"published_by":1},{"id":3,"uuid":"e7b3016c-8823-4334-8478-8080efa7123f","title":"“前端养成记”博客上线历程","slug":"my-frontend-cultivation-blog-launched","markdown":"##平台选择\n\n本博客从计划到上线，前前后后应该有快一个月吧。一开始就决定托管在 `Github Pages` 上，自然会从静态博客入手遴选。一开始选定的是 `Jekyll` 静态博客，后来又喜欢上 `Hexo` 的简洁；最后的最后，看到了 `Ghost` 的默认主题 `Casper`，很是喜欢。无奈 Ghost 不是静态博客，感觉像是没戏了，遂开始想要找 Casper 的 Jekyll 或 Hexo 的移植主题，也确实找到了。\n\n>`Casper for Jekyll`: https://github.com/rosario/kasper\n\n>`Casper for Hexo`:\n\n>https://github.com/MIKAGMR/hexo-theme-ghost-casper\n\n>https://github.com/kywk/hexo-theme-casper\n\n跟静态博客不同的是，Ghost 这种轻量级的动态博客，有一个管理后台，可以直接写作和管理博客。本质上，跟 `WordPress` 是相通的，只是 Ghost 搭建在 `Node.js` 环境上，轻量，快速，简洁。\n\n>不可否认的是，Ghost 的颜值是我相当看重的一点，也确实打动我了。\n\n**所以我最终选择了 Ghost（确实一点都不 geek）。**当然，前提是我找到了一套解决方案，我要做的是测试方案的可行性。\n\n\n##Ghost 技术栈简要解析\n\n把 Ghost 的结构厘清，其实蛮简单，特别是使用官方已经编译好的 Ghost 压缩包解压后进行二次开发的话：\n\n>Ghost 的页面使用的是 `Handlebars.js` 前端模板引擎，页面总数在 10 个左右。页面采用`引入/调用`方式，就是把常规的 HTML 结构，譬如 `meta` 头信息、`header`、`footer` 等常用且可以复用的 HTML 页面结构，给独立成一个个模板文件，而在其他诸如`单篇博文页`、`博主个人主页`等页面模板文件内，引用上面的独立模板文件。譬如在单篇博文页内引入 meta 头信息模板文件，就可以达到一处编写，N 处调用的类似`变量调用/引入`的概念。**前端模板引擎的出现，给前端开发人员缩短开发周期起到了不可或缺的作用。**\n\n**不了解前端模板引擎工作原理的童鞋，请移步 Handlebars.js [官方文档](http://handlebarsjs.com/)**。快速上手中文教程戳 **[这里](http://www.ghostchina.com/introducing-the-handlebars-js-templating-engine/)**。\n\n\n##动态→静态，how?\n\n所谓动态博客，需要服务器来支持数据输出。而静态页面，就是用诸如 `HTML`、`XML` 等标记语言写好结构，用 `CSS` 描述好表现样式，用 `JavaScript` 写好了交互逻辑的，理论上不再接受后端服务器数据输出而动态修改的页面。\n\n**简而言之，静态页面是死的，动态页面是活的。**对于 Github Pages 这样仅支持静态网站/页面的托管服务而言，怎么搞定 Ghost 的托管呢？\n\n**这就不得不提到一个开源项目 `Buster` 了！**\n\n\n##`Buster` 是救命稻草\n\nBuster 的原理其实蛮简单：用 `Python` 语言写的一个**文件路径遍历器**。通过调用 `Wget` 把 Ghost 中用到的图片、字体、CSS、JavaScript 等静态资源统一复制到一个新的文件夹（同时此文件夹可以作为 Github Pages 的 repo），然后相应地修改 HTML 文件内引用的静态文件的路径，使之最终生效。\n\n\n## `Buster` 也是个大坑\n\n然而，很不幸的是，Buster 这玩意最初始的项目贡献者已不再维护该项目。旧版的 Buster 对于新版的 Ghost 博客，有很多不如人意的地方（或者说，更多的是由于 Wget 的特性带来的问题），譬如：**RSS 订阅功能失效**、**博文题图无法成功获取并复制到新目录导致图片引用失效**等等……\n\n**支持新版 Ghost 的 Buster 是由 Misiur 提供的：**\n>Misiur's Buster Github Repo：https://github.com/Misiur/buster\n\n光是选择 Buster 的 fork 版本，折腾 Buster 的用法，给 Buster 找 bug，就耗了我将近 4 天的闲暇时间，估计将近 10 个小时。\n\n\n##Don't BB, show the `code`\n\n####软件/工具准备：\n\n>1. **[Node.js](https://nodejs.org/en/download/releases)**：前端开发人员必备。建议使用版本 v0.12.7。\n>2. **[git](http://git-scm.com/download) / [Github Desktop](https://desktop.github.com)**：用于克隆项目到本地，部署、提交项目到 Github。建议都安装，前者用于命令行操作，方便其他前端工具和工作流调用；后者用于手动图形化操作，更简便。\n>3. **[Python](https://www.python.org/downloads)**：用于运行 Buster.py 脚本文件。建议使用版本 v2.7.10.\n>4. **[Chocolatey](https://github.com/chocolatey/chocolatey)**：Windows 平台软件包管理工具。本项目主要用它来安装最新版的 Wget。\n\n####项目源码准备\n\n>**[Ghost 中文版](https://github.com/diancloud/Ghost)**：由点云网提供的中文版 Ghost。\n\n>**[Buster](https://github.com/Misiur/buster)**：由 Misiur 提供支持。\n\n由于本人使用 Windows 平台，还不熟悉 Linux 和 OS X。以下代码均基于 Windows 平台，望见谅。然而我坚信，Windows 这么奇葩的平台都能搞定，Linux 和 OS X 一点问题都木有。\n\n###具体步骤：\n\n1. 给`软件/工具准备`中安装的软件和工具添加到 Windows 的`系统环境变量`，并重启电脑；\n2. 在 Github Desktop 中创建一个名为 `username.github.io` 的项目，并提交到 Github（`username` 替换成自己的 Github 账户名，例如我的是：`loyalsoldier.github.io`）；\n3. 下载 Ghost 中文版：https://github.com/diancloud/Ghost/releases\n4. 解压 Ghost 中文版压缩包到`步骤 1` 创建的项目的根目录下的 Ghost 文件夹（文件夹命名非必须 Ghost，只是方便分辨文件和之后操作而已）；\n5. 把 Buster 克隆到项目根目录：在命令行提示符中输入`git clone https://github.com/Misiur/buster.git`，并回车；\n6. 进入 Ghost 文件夹并启动 Ghost：\n\n ![启动 Ghost 服务器](/content/images/2015/11/start.png)\n\n7. 熟悉 Ghost 博客操作，包括`新建博文`、`修改博文`、`修改个人主页`等等……\n8. 熟悉操作后，可以在生产环境下进行操作了：\n\n ![配置生产环境 URL](/content/images/2015/11/configJS.png)\n\n9. 保持 Ghost 服务器开启状态下，用 Markdown 写好你的博文\n10. **最重要的一步，用 Buster 把 Ghost 博文静态化处理：**\n\n ![用 Buster 将 Ghost 博客静态化处理](/content/images/2015/11/buster-1.png)\n\n11. 给 `.gitignore` 文件添加以下内容即可在向 Github 提交项目更改时，忽略掉该文件/文件夹：\n\n ![给项目添加 .gitignore 列表](/content/images/2015/11/gitignore.png)\n\n12. 如果自己有一个域名，并希望访客输入 `username.github.io` 时，自动跳转到个性化域名上去，可在项目根目录新建一个 `CNAME` 文件：\n\n ![给项目增加 CNAME 跳转](/content/images/2015/11/addCNAME.png)\n\n13. 将项目提交到 Github。一两分钟后，访问 `http://username.github.io` 或 CNAME 文件中设置的`个性域名`，就可以访问自己的 Ghost 博客啦！\n\n\n##Ghost 进阶使用教程\n\n####添加“多说”评论\n\n1. 注册`多说`账号：http://duoshuo.com ，并填写相关设置；\n2. 在 `Ghost/content/themes/casper/post.hbs` 模板文件的 `{{#post}}{{/post}}` 标签之间加入以下多说评论通用代码（建议放在 `</footer>` 标签前）：\n\n ![多说评论框](/content/images/2015/11/duoshuo.png)\n\n3. 配合 Ghost 蓝色的主题色，我定制了一套多说评论框的样式，供参考：\n\n```\n/* 评论区块基本样式 */\n#ds-thread {\n    margin-top: 7rem;\n    padding-top: 6rem;\n    border-top: 1px solid #ebf2f6;\n}\n\n/* 更改社交账号登陆 样式 */\n#ds-thread #ds-reset .ds-login-buttons .ds-more-services,\n#ds-thread #ds-reset .ds-login-buttons .ds-more-services:hover{\n\tcolor: #90bad3 !important;\n}\n\n/* 链接悬停样式 */\n#ds-thread #ds-reset a:hover {\n    color: #90bad3 !important;\n}\n\n/* 分类悬停样式 */\n#ds-thread #ds-reset .ds-sort a.ds-current,\n#ds-thread #ds-reset .ds-sort a:active {\n    color: #90bad3 !important;\n}\n\n/* 高亮悬停样式 */\n#ds-thread #ds-reset .ds-highlight {\n    color: #90bad3 !important;\n}\n\n/* 评论区块底部 border 样式 */\n#ds-thread #ds-reset .ds-comments {\n    border-bottom-color: #ebf2f6 !important;\n}\n\n/* 评论列表顶部 border 样式*/\n#ds-thread #ds-reset li.ds-post {\n    border-top-color: #ebf2f6 !important;\n}\n\n/* 评论 body 文字的样式*/\n#ds-thread #ds-reset .ds-comment-body p {\n    color: #3a4145;\n}\n\n/* 新浪微博浮沉的链接样式*/\n#ds-thread #ds-reset #ds-bubble a,\n#ds-thread #ds-reset #ds-bubble a:hover {\n    color: #90bad3 !important;\n}\n\n/* Power By 字体颜色 */\n#ds-thread #ds-reset .ds-powered-by a,\n#ds-thread #ds-reset .ds-powered-by a:hover {\n    color: #ddd;\n}\n\n/* 工具条的样式 */\n#ds-thread #ds-reset .ds-post-toolbar {\n    border-bottom-left-radius: 0.8rem !important;\n    border-bottom-right-radius: 0.8rem !important;\n}\n\n/* 发布按钮的样式 */\n#ds-thread #ds-reset .ds-post-button {\n    border-bottom-right-radius: 0.8rem !important;\n}\n\n#ds-thread #ds-reset .ds-post-button {\n\tbackground: #90bad3 !important;\n}\n\n#ds-thread #ds-reset .ds-post-button:hover {\n\tbackground: #7381FE !important;\n}\n\n/* 头像的样式 */\n#ds-thread #ds-reset .ds-replybox .ds-avatar img,\n#ds-reset .ds-avatar img {\n    border-radius: 50% !important;\n}\n\n/* 评论计算器的样式 */\n#ds-thread #ds-reset li.ds-tab a.ds-current {\n    border-radius: 5px !important;\n}\n\n/* 评论框的样式 */\n#ds-thread #ds-reset .ds-textarea-wrapper {\n\tborder-top-left-radius: 0.8rem !important;\n\tborder-top-right-radius: 0.8rem !important;\n}\n\n\n#ds-thread #ds-reset .ds-post-options {\n\tborder-bottom-left-radius: 0.8rem;\n\tborder-bottom-right-radius: 0.8rem;\n}\n\n/* 媒体查询 */\n@media only screen and (max-width: 500px) {\n\n\t/* base */\n    #ds-thread {\n        margin-top: 3rem;\n    }\n    /* 头像 margin */\n    #ds-thread #ds-reset .ds-replybox .ds-avatar {\n        margin: 0 !important;\n    }\n    /* 工具条的样式 */\n    #ds-thread #ds-reset .ds-post-options,\n    #ds-thread #ds-reset .ds-post-toolbar {\n    \tborder-bottom-right-radius: 0;\n    \tborder-right-width: 0;\n    }\n    /* 取消 评论数的背景和边框样式 */\n    #ds-thread #ds-reset li.ds-tab a.ds-current {\n    \tborder: none !important;\n    \tbackground-color: initial !important;\n    }\n    /* 增加评论数的边距 */\n    #ds-thread #ds-reset li.ds-tab a.ds-current span {\n    \tpadding-left: 4px !important;\n    }\n    /* 工具条工具的边距 */\n    #ds-thread #ds-reset .ds-post-options .ds-sync {\n    \tleft: 1.4rem !important;\n    }\n    /* 隐藏 PowerBy */\n    #ds-thread #ds-reset .ds-powered-by a,\n    #ds-thread #ds-reset .ds-powered-by a:hover {\n    \tdisplay: none !important;\n    }\n    /* 增加评论区的底部边距 */\n    #ds-thread {\n    \tmargin-bottom: 4rem !important;\n    }\n}\n```\n\n####添加 CNZZ 统计\n\n1. 注册 CNZZ：http://www.cnzz.com\n2. 命令行输入 `npm start --production` 开启服务器预览；\n3. 浏览器输入 http://127.0.0.1:2368/ghost 进入生产环境下的 Ghost 后台管理系统；\n4. 点击`博客设置` - `自定义代码`，在`网页尾部`输入框中输入 CNZZ 提供的统计代码；\n5. 为了让统计代码按钮不在页面内显示，可以在 CNZZ 提供的代码外套一层 `div`，例如这个站点的统计代码如下：\n\n ![CNZZ 统计代码](/content/images/2015/11/cnzz.png)\n\n####修复 RSS 订阅\n\n将 `Ghost/content/themes/casper/partials/navigation.hbs` 模板文件的 `href=\"{{@blog.url}}/rss` 修改为 `href=\"{{@blog.url}}/rss/index.rss`\n\n####绑定个性化域名\n\n托管在 Github Pages 上的静态页面，都是以 username.github.io 为域名进行访问的。然而很多人肯定希望能使用自己的域名。具体步骤如下：\n\n1. 先完成上面的所有步骤，包括将博客静态化后，上传部署到 Github，然后使用命令行提示符，输入 `ping username.github.io` 获取你的 Github Pages 页面的 IP 地址（`username` 请替换为自己的 Github 账号名），如图：\n\n ![Ping IP](/content/images/2015/11/ping.png)\n \n 其中 `103.245.222.133` 就是我的 Github Pages 个人页面的 IP 地址。\n\n2. 打开你注册的个人域名的域名注册商网站，比方说国内的`万网`、`新网`，国外的 `GoDaddy`，进入管理控制台，添加域名解析。在解析记录中加入一个 `A记录`（必须）、一个 `CNAME 记录`（非必须），大体如下：\n\n ![添加域名解析记录](/content/images/2015/11/IP.png)\n\n>A 记录填写`步骤 1` 中 Ping 出来的 `IP 地址`，主机记录是 `@`；CNAME 记录填写你注册的`个性化域名`，主机记录是 `www` 或任何你能想到的`前缀`。\n\n>CNAME 里添加 `www` 的作用是，你输入 `www.loyalsoldier.me`，浏览器会自动跳转到 `loyalsoldier.me`。你也可以添加一条叫 `blog` 的 CNAME 记录，那么访问 `blog.loyalsoldier.me` 的时候，就会自动跳转到 `loyalsoldier.me`。·\n\n**这里的 CNAME 跟提交到 Github 项目里的 CNAME 文件是相互跳转的功能：**\n\n>这里的 CNAME 的作用是：输入 loyalsoldier.me，浏览器会跳转到 loyalsoldier.github.io。\n\n>Github 项目中 CNAME 文件的作用是：输入 loyalsoldier.github.io，浏览器跳转到 loyalsoldier.me。\n\n\n##注意事项\n\n1. 每次撰写博文，都要通过 `npm start --production` 开启 Ghost 服务器进入 Ghost 后台；\n2. 博文撰写完毕后，都需要重新 `python buster.py generate`；\n3. `generate` 完成后，都需要提交项目更改到 Github，博文才能生效。\n\n\n##共同进步\n\n有疑问，可评论、留言，将尽力解答。\n\n如果博文存在错误，欢迎指出。我们共同进步！","html":"<h2 id=\"\">平台选择</h2>\n\n<p>本博客从计划到上线，前前后后应该有快一个月吧。一开始就决定托管在 <code>Github Pages</code> 上，自然会从静态博客入手遴选。一开始选定的是 <code>Jekyll</code> 静态博客，后来又喜欢上 <code>Hexo</code> 的简洁；最后的最后，看到了 <code>Ghost</code> 的默认主题 <code>Casper</code>，很是喜欢。无奈 Ghost 不是静态博客，感觉像是没戏了，遂开始想要找 Casper 的 Jekyll 或 Hexo 的移植主题，也确实找到了。</p>\n\n<blockquote>\n  <p><code>Casper for Jekyll</code>: <a href=\"https://github.com/rosario/kasper\">https://github.com/rosario/kasper</a></p>\n  \n  <p><code>Casper for Hexo</code>:</p>\n  \n  <p><a href=\"https://github.com/MIKAGMR/hexo-theme-ghost-casper\">https://github.com/MIKAGMR/hexo-theme-ghost-casper</a></p>\n  \n  <p><a href=\"https://github.com/kywk/hexo-theme-casper\">https://github.com/kywk/hexo-theme-casper</a></p>\n</blockquote>\n\n<p>跟静态博客不同的是，Ghost 这种轻量级的动态博客，有一个管理后台，可以直接写作和管理博客。本质上，跟 <code>WordPress</code> 是相通的，只是 Ghost 搭建在 <code>Node.js</code> 环境上，轻量，快速，简洁。</p>\n\n<blockquote>\n  <p>不可否认的是，Ghost 的颜值是我相当看重的一点，也确实打动我了。</p>\n</blockquote>\n\n<p><strong>所以我最终选择了 Ghost（确实一点都不 geek）。</strong>当然，前提是我找到了一套解决方案，我要做的是测试方案的可行性。</p>\n\n<h2 id=\"ghost\">Ghost 技术栈简要解析</h2>\n\n<p>把 Ghost 的结构厘清，其实蛮简单，特别是使用官方已经编译好的 Ghost 压缩包解压后进行二次开发的话：</p>\n\n<blockquote>\n  <p>Ghost 的页面使用的是 <code>Handlebars.js</code> 前端模板引擎，页面总数在 10 个左右。页面采用<code>引入/调用</code>方式，就是把常规的 HTML 结构，譬如 <code>meta</code> 头信息、<code>header</code>、<code>footer</code> 等常用且可以复用的 HTML 页面结构，给独立成一个个模板文件，而在其他诸如<code>单篇博文页</code>、<code>博主个人主页</code>等页面模板文件内，引用上面的独立模板文件。譬如在单篇博文页内引入 meta 头信息模板文件，就可以达到一处编写，N 处调用的类似<code>变量调用/引入</code>的概念。<strong>前端模板引擎的出现，给前端开发人员缩短开发周期起到了不可或缺的作用。</strong></p>\n</blockquote>\n\n<p><strong>不了解前端模板引擎工作原理的童鞋，请移步 Handlebars.js <a href=\"http://handlebarsjs.com/\">官方文档</a></strong>。快速上手中文教程戳 <strong><a href=\"http://www.ghostchina.com/introducing-the-handlebars-js-templating-engine/\">这里</a></strong>。</p>\n\n<h2 id=\"how\">动态→静态，how?</h2>\n\n<p>所谓动态博客，需要服务器来支持数据输出。而静态页面，就是用诸如 <code>HTML</code>、<code>XML</code> 等标记语言写好结构，用 <code>CSS</code> 描述好表现样式，用 <code>JavaScript</code> 写好了交互逻辑的，理论上不再接受后端服务器数据输出而动态修改的页面。</p>\n\n<p><strong>简而言之，静态页面是死的，动态页面是活的。</strong>对于 Github Pages 这样仅支持静态网站/页面的托管服务而言，怎么搞定 Ghost 的托管呢？</p>\n\n<p><strong>这就不得不提到一个开源项目 <code>Buster</code> 了！</strong></p>\n\n<h2 id=\"buster\"><code>Buster</code> 是救命稻草</h2>\n\n<p>Buster 的原理其实蛮简单：用 <code>Python</code> 语言写的一个<strong>文件路径遍历器</strong>。通过调用 <code>Wget</code> 把 Ghost 中用到的图片、字体、CSS、JavaScript 等静态资源统一复制到一个新的文件夹（同时此文件夹可以作为 Github Pages 的 repo），然后相应地修改 HTML 文件内引用的静态文件的路径，使之最终生效。</p>\n\n<h2 id=\"buster\"><code>Buster</code> 也是个大坑</h2>\n\n<p>然而，很不幸的是，Buster 这玩意最初始的项目贡献者已不再维护该项目。旧版的 Buster 对于新版的 Ghost 博客，有很多不如人意的地方（或者说，更多的是由于 Wget 的特性带来的问题），譬如：<strong>RSS 订阅功能失效</strong>、<strong>博文题图无法成功获取并复制到新目录导致图片引用失效</strong>等等……</p>\n\n<p><strong>支持新版 Ghost 的 Buster 是由 Misiur 提供的：</strong></p>\n\n<blockquote>\n  <p>Misiur's Buster Github Repo：<a href=\"https://github.com/Misiur/buster\">https://github.com/Misiur/buster</a></p>\n</blockquote>\n\n<p>光是选择 Buster 的 fork 版本，折腾 Buster 的用法，给 Buster 找 bug，就耗了我将近 4 天的闲暇时间，估计将近 10 个小时。</p>\n\n<h2 id=\"dontbbshowthecode\">Don't BB, show the <code>code</code></h2>\n\n<h4 id=\"\">软件/工具准备：</h4>\n\n<blockquote>\n  <ol>\n  <li><strong><a href=\"https://nodejs.org/en/download/releases\">Node.js</a></strong>：前端开发人员必备。建议使用版本 v0.12.7。</li>\n  <li><strong><a href=\"http://git-scm.com/download\">git</a> / <a href=\"https://desktop.github.com\">Github Desktop</a></strong>：用于克隆项目到本地，部署、提交项目到 Github。建议都安装，前者用于命令行操作，方便其他前端工具和工作流调用；后者用于手动图形化操作，更简便。</li>\n  <li><strong><a href=\"https://www.python.org/downloads\">Python</a></strong>：用于运行 Buster.py 脚本文件。建议使用版本 v2.7.10.</li>\n  <li><strong><a href=\"https://github.com/chocolatey/chocolatey\">Chocolatey</a></strong>：Windows 平台软件包管理工具。本项目主要用它来安装最新版的 Wget。</li>\n  </ol>\n</blockquote>\n\n<h4 id=\"\">项目源码准备</h4>\n\n<blockquote>\n  <p><strong><a href=\"https://github.com/diancloud/Ghost\">Ghost 中文版</a></strong>：由点云网提供的中文版 Ghost。</p>\n  \n  <p><strong><a href=\"https://github.com/Misiur/buster\">Buster</a></strong>：由 Misiur 提供支持。</p>\n</blockquote>\n\n<p>由于本人使用 Windows 平台，还不熟悉 Linux 和 OS X。以下代码均基于 Windows 平台，望见谅。然而我坚信，Windows 这么奇葩的平台都能搞定，Linux 和 OS X 一点问题都木有。</p>\n\n<h3 id=\"\">具体步骤：</h3>\n\n<ol>\n<li>给<code>软件/工具准备</code>中安装的软件和工具添加到 Windows 的<code>系统环境变量</code>，并重启电脑；  </li>\n<li>在 Github Desktop 中创建一个名为 <code>username.github.io</code> 的项目，并提交到 Github（<code>username</code> 替换成自己的 Github 账户名，例如我的是：<code>loyalsoldier.github.io</code>）；  </li>\n<li>下载 Ghost 中文版：<a href=\"https://github.com/diancloud/Ghost/releases\">https://github.com/diancloud/Ghost/releases</a>  </li>\n<li>解压 Ghost 中文版压缩包到<code>步骤 1</code> 创建的项目的根目录下的 Ghost 文件夹（文件夹命名非必须 Ghost，只是方便分辨文件和之后操作而已）；  </li>\n<li>把 Buster 克隆到项目根目录：在命令行提示符中输入<code>git clone https://github.com/Misiur/buster.git</code>，并回车；  </li>\n<li><p>进入 Ghost 文件夹并启动 Ghost：</p>\n\n<p><img src=\"/content/images/2015/11/start.png\" alt=\"启动 Ghost 服务器\" title=\"\" /></p></li>\n<li><p>熟悉 Ghost 博客操作，包括<code>新建博文</code>、<code>修改博文</code>、<code>修改个人主页</code>等等……  </p></li>\n<li><p>熟悉操作后，可以在生产环境下进行操作了：</p>\n\n<p><img src=\"/content/images/2015/11/configJS.png\" alt=\"配置生产环境 URL\" title=\"\" /></p></li>\n<li><p>保持 Ghost 服务器开启状态下，用 Markdown 写好你的博文  </p></li>\n<li><p><strong>最重要的一步，用 Buster 把 Ghost 博文静态化处理：</strong></p>\n\n<p><img src=\"/content/images/2015/11/buster-1.png\" alt=\"用 Buster 将 Ghost 博客静态化处理\" title=\"\" /></p></li>\n<li><p>给 <code>.gitignore</code> 文件添加以下内容即可在向 Github 提交项目更改时，忽略掉该文件/文件夹：</p>\n\n<p><img src=\"/content/images/2015/11/gitignore.png\" alt=\"给项目添加 .gitignore 列表\" title=\"\" /></p></li>\n<li><p>如果自己有一个域名，并希望访客输入 <code>username.github.io</code> 时，自动跳转到个性化域名上去，可在项目根目录新建一个 <code>CNAME</code> 文件：</p>\n\n<p><img src=\"/content/images/2015/11/addCNAME.png\" alt=\"给项目增加 CNAME 跳转\" title=\"\" /></p></li>\n<li><p>将项目提交到 Github。一两分钟后，访问 <code>http://username.github.io</code> 或 CNAME 文件中设置的<code>个性域名</code>，就可以访问自己的 Ghost 博客啦！</p></li>\n</ol>\n\n<h2 id=\"ghost\">Ghost 进阶使用教程</h2>\n\n<h4 id=\"\">添加“多说”评论</h4>\n\n<ol>\n<li>注册<code>多说</code>账号：<a href=\"http://duoshuo.com\">http://duoshuo.com</a> ，并填写相关设置；  </li>\n<li><p>在 <code>Ghost/content/themes/casper/post.hbs</code> 模板文件的 <code>{{#post}}{{/post}}</code> 标签之间加入以下多说评论通用代码（建议放在 <code>&lt;/footer&gt;</code> 标签前）：</p>\n\n<p><img src=\"/content/images/2015/11/duoshuo.png\" alt=\"多说评论框\" title=\"\" /></p></li>\n<li><p>配合 Ghost 蓝色的主题色，我定制了一套多说评论框的样式，供参考：</p></li>\n</ol>\n\n<pre><code>/* 评论区块基本样式 */\n#ds-thread {\n    margin-top: 7rem;\n    padding-top: 6rem;\n    border-top: 1px solid #ebf2f6;\n}\n\n/* 更改社交账号登陆 样式 */\n#ds-thread #ds-reset .ds-login-buttons .ds-more-services,\n#ds-thread #ds-reset .ds-login-buttons .ds-more-services:hover{\n    color: #90bad3 !important;\n}\n\n/* 链接悬停样式 */\n#ds-thread #ds-reset a:hover {\n    color: #90bad3 !important;\n}\n\n/* 分类悬停样式 */\n#ds-thread #ds-reset .ds-sort a.ds-current,\n#ds-thread #ds-reset .ds-sort a:active {\n    color: #90bad3 !important;\n}\n\n/* 高亮悬停样式 */\n#ds-thread #ds-reset .ds-highlight {\n    color: #90bad3 !important;\n}\n\n/* 评论区块底部 border 样式 */\n#ds-thread #ds-reset .ds-comments {\n    border-bottom-color: #ebf2f6 !important;\n}\n\n/* 评论列表顶部 border 样式*/\n#ds-thread #ds-reset li.ds-post {\n    border-top-color: #ebf2f6 !important;\n}\n\n/* 评论 body 文字的样式*/\n#ds-thread #ds-reset .ds-comment-body p {\n    color: #3a4145;\n}\n\n/* 新浪微博浮沉的链接样式*/\n#ds-thread #ds-reset #ds-bubble a,\n#ds-thread #ds-reset #ds-bubble a:hover {\n    color: #90bad3 !important;\n}\n\n/* Power By 字体颜色 */\n#ds-thread #ds-reset .ds-powered-by a,\n#ds-thread #ds-reset .ds-powered-by a:hover {\n    color: #ddd;\n}\n\n/* 工具条的样式 */\n#ds-thread #ds-reset .ds-post-toolbar {\n    border-bottom-left-radius: 0.8rem !important;\n    border-bottom-right-radius: 0.8rem !important;\n}\n\n/* 发布按钮的样式 */\n#ds-thread #ds-reset .ds-post-button {\n    border-bottom-right-radius: 0.8rem !important;\n}\n\n#ds-thread #ds-reset .ds-post-button {\n    background: #90bad3 !important;\n}\n\n#ds-thread #ds-reset .ds-post-button:hover {\n    background: #7381FE !important;\n}\n\n/* 头像的样式 */\n#ds-thread #ds-reset .ds-replybox .ds-avatar img,\n#ds-reset .ds-avatar img {\n    border-radius: 50% !important;\n}\n\n/* 评论计算器的样式 */\n#ds-thread #ds-reset li.ds-tab a.ds-current {\n    border-radius: 5px !important;\n}\n\n/* 评论框的样式 */\n#ds-thread #ds-reset .ds-textarea-wrapper {\n    border-top-left-radius: 0.8rem !important;\n    border-top-right-radius: 0.8rem !important;\n}\n\n\n#ds-thread #ds-reset .ds-post-options {\n    border-bottom-left-radius: 0.8rem;\n    border-bottom-right-radius: 0.8rem;\n}\n\n/* 媒体查询 */\n@media only screen and (max-width: 500px) {\n\n    /* base */\n    #ds-thread {\n        margin-top: 3rem;\n    }\n    /* 头像 margin */\n    #ds-thread #ds-reset .ds-replybox .ds-avatar {\n        margin: 0 !important;\n    }\n    /* 工具条的样式 */\n    #ds-thread #ds-reset .ds-post-options,\n    #ds-thread #ds-reset .ds-post-toolbar {\n        border-bottom-right-radius: 0;\n        border-right-width: 0;\n    }\n    /* 取消 评论数的背景和边框样式 */\n    #ds-thread #ds-reset li.ds-tab a.ds-current {\n        border: none !important;\n        background-color: initial !important;\n    }\n    /* 增加评论数的边距 */\n    #ds-thread #ds-reset li.ds-tab a.ds-current span {\n        padding-left: 4px !important;\n    }\n    /* 工具条工具的边距 */\n    #ds-thread #ds-reset .ds-post-options .ds-sync {\n        left: 1.4rem !important;\n    }\n    /* 隐藏 PowerBy */\n    #ds-thread #ds-reset .ds-powered-by a,\n    #ds-thread #ds-reset .ds-powered-by a:hover {\n        display: none !important;\n    }\n    /* 增加评论区的底部边距 */\n    #ds-thread {\n        margin-bottom: 4rem !important;\n    }\n}\n</code></pre>\n\n<h4 id=\"cnzz\">添加 CNZZ 统计</h4>\n\n<ol>\n<li>注册 CNZZ：<a href=\"http://www.cnzz.com\">http://www.cnzz.com</a>  </li>\n<li>命令行输入 <code>npm start --production</code> 开启服务器预览；  </li>\n<li>浏览器输入 <a href=\"http://127.0.0.1:2368/ghost\">http://127.0.0.1:2368/ghost</a> 进入生产环境下的 Ghost 后台管理系统；  </li>\n<li>点击<code>博客设置</code> - <code>自定义代码</code>，在<code>网页尾部</code>输入框中输入 CNZZ 提供的统计代码；  </li>\n<li><p>为了让统计代码按钮不在页面内显示，可以在 CNZZ 提供的代码外套一层 <code>div</code>，例如这个站点的统计代码如下：</p>\n\n<p><img src=\"/content/images/2015/11/cnzz.png\" alt=\"CNZZ 统计代码\" title=\"\" /></p></li>\n</ol>\n\n<h4 id=\"rss\">修复 RSS 订阅</h4>\n\n<p>将 <code>Ghost/content/themes/casper/partials/navigation.hbs</code> 模板文件的 <code>href=\"{{@blog.url}}/rss</code> 修改为 <code>href=\"{{@blog.url}}/rss/index.rss</code></p>\n\n<h4 id=\"\">绑定个性化域名</h4>\n\n<p>托管在 Github Pages 上的静态页面，都是以 username.github.io 为域名进行访问的。然而很多人肯定希望能使用自己的域名。具体步骤如下：</p>\n\n<ol>\n<li><p>先完成上面的所有步骤，包括将博客静态化后，上传部署到 Github，然后使用命令行提示符，输入 <code>ping username.github.io</code> 获取你的 Github Pages 页面的 IP 地址（<code>username</code> 请替换为自己的 Github 账号名），如图：</p>\n\n<p><img src=\"/content/images/2015/11/ping.png\" alt=\"Ping IP\" title=\"\" /></p>\n\n<p>其中 <code>103.245.222.133</code> 就是我的 Github Pages 个人页面的 IP 地址。</p></li>\n<li><p>打开你注册的个人域名的域名注册商网站，比方说国内的<code>万网</code>、<code>新网</code>，国外的 <code>GoDaddy</code>，进入管理控制台，添加域名解析。在解析记录中加入一个 <code>A记录</code>（必须）、一个 <code>CNAME 记录</code>（非必须），大体如下：</p>\n\n<p><img src=\"/content/images/2015/11/IP.png\" alt=\"添加域名解析记录\" title=\"\" /></p></li>\n</ol>\n\n<blockquote>\n  <p>A 记录填写<code>步骤 1</code> 中 Ping 出来的 <code>IP 地址</code>，主机记录是 <code>@</code>；CNAME 记录填写你注册的<code>个性化域名</code>，主机记录是 <code>www</code> 或任何你能想到的<code>前缀</code>。</p>\n  \n  <p>CNAME 里添加 <code>www</code> 的作用是，你输入 <code>www.loyalsoldier.me</code>，浏览器会自动跳转到 <code>loyalsoldier.me</code>。你也可以添加一条叫 <code>blog</code> 的 CNAME 记录，那么访问 <code>blog.loyalsoldier.me</code> 的时候，就会自动跳转到 <code>loyalsoldier.me</code>。·</p>\n</blockquote>\n\n<p><strong>这里的 CNAME 跟提交到 Github 项目里的 CNAME 文件是相互跳转的功能：</strong></p>\n\n<blockquote>\n  <p>这里的 CNAME 的作用是：输入 loyalsoldier.me，浏览器会跳转到 loyalsoldier.github.io。</p>\n  \n  <p>Github 项目中 CNAME 文件的作用是：输入 loyalsoldier.github.io，浏览器跳转到 loyalsoldier.me。</p>\n</blockquote>\n\n<h2 id=\"\">注意事项</h2>\n\n<ol>\n<li>每次撰写博文，都要通过 <code>npm start --production</code> 开启 Ghost 服务器进入 Ghost 后台；  </li>\n<li>博文撰写完毕后，都需要重新 <code>python buster.py generate</code>；  </li>\n<li><code>generate</code> 完成后，都需要提交项目更改到 Github，博文才能生效。</li>\n</ol>\n\n<h2 id=\"\">共同进步</h2>\n\n<p>有疑问，可评论、留言，将尽力解答。</p>\n\n<p>如果博文存在错误，欢迎指出。我们共同进步！</p>","image":"/content/images/2015/11/20151022152217_8828.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":"前端养成记 博客上线历程","meta_description":"想知道怎么使用 Github Pages 托管动态 Ghost 博客系统？想知道 Ghost 与 Hexo、Jekyll 有什么不同？完整的博客上线历程记录！","author_id":1,"created_at":1446314580884,"created_by":1,"updated_at":1446804037632,"updated_by":1,"published_at":1446363600000,"published_by":1},{"id":4,"uuid":"c0e33500-73d8-45f7-a4f7-f3fb5d4cf220","title":"笔记本电脑，怎样才能不卡？","slug":"how-to-accelerate-your-computer","markdown":"我从 08 年接触互联网开始玩电脑，一折腾就是 5 年。这几年来，可以说 `PC` 和 `Windows` 一直都没什么太大的变化。配置在稳步提升，安装越来越简单而已。然而，对比 `OS X`，微软一直无法解决的问题是：**在中国这个大环境下，针对小白用户和盗版用户，Windows 永远无法摆脱越用越卡的魔咒**（导致不少人一会儿就重装一次系统。且不说盗版是非法行为）。\n\n**总有人时不时问我，电脑好卡，怎么办？**\n>我给出的结论通常是：一是电脑性能确实不过关，二是使用习惯不好。\n\n**下面，我将从`电脑性能`和`日常使用习惯`入手，手把手教你如何一步步`加速`你的电脑。这样，妈妈再也不用担心你的电脑突然死机、丢失论文，收藏多年的图片莫名其妙地消失啦！最后，推荐一些优秀`日常办公软件`和`专业软件`，帮助你们快速找到最佳助手，提高工作效率。**\n\n---\n\n###Step 1: 关于性能\n\n>**问：**怎样的电脑配置才算性能过关（只针对日常办公、普通影音娱乐，配以小型游戏）？\n\n>**答：**台式机 和 Notebook，无非就几大件：**`CPU（处理器）`**、**`RAM（运行内存）`**、**`显卡`**、**`硬盘`**。\n\n**选硬件配置，三条原则：**\n\n1. 选大厂、大品牌；\n2. 给性能升级留点空间；\n3. 多了解技术参数，而不是用户对品牌的抱怨。\n\n---\n\n######处理器（CPU）\n**CPU 的作用是，计算和控制，即为处理。**能用上 `Intel Core i` 系列（英特尔酷睿 i 系列）的电脑，处理器性能问题都不大，例如 Intel i3、i5、i7。当然英特尔每年都会推出新一代的 i 系列处理器，这也就是有诸如此类处理器的原因：`Intel Core i5 4460`……“`i5`”后面跟着的四个数字，第一个数字“`4`”意味着处理器的代数。2015 年，`Intel Core i` 系列已经出到第六代了。\n\n所以，在 CPU 的选择上，除了至少要用 `i 系列`，最好还要用去年或今年上市销售的产品（这里推荐用 `i5`。去 [太平洋电脑网](http://product.pconline.com.cn/notebook/search.shtml) 或 [中关村在线](http://detail.zol.com.cn/notebook_index/subcate16_list_1.html) 查一下今年上市的英特尔处理器即可。\n\n==由于本人对英特尔其他系列处理器不太了解，例如`奔腾系列`、`至强系列`，所以不作介绍。至强系列是高性能产品线。然而，还有一个处理器大厂，叫 `AMD`。对其不太了解，故也不作介绍。反正 CPU 选英特尔准没错。==\n\n**推荐厂家：**`英特尔（Intel）`\n\n**推荐产品线：**英特尔酷睿 i 系列（`Intel Core i` 系列）\n\n---\n\n######运行内存（RAM）\n\n**RAM 的作用是，让你能同时运行更多的程序、软件，以及允许你在程序间切换时不卡顿。**==目前来说，4G 运行内存够用。==\n\n然而，大部分笔记本只有两个内存条插口。如果买了 2 条 2G 内存条，把两个插口都插满了。2、3 年之后想增加内存的话，就比较尴尬，此时可以买 1条 4G 内存条，留一个插口以后性能升级时用。当然，如果 4G 内存足够使用的话，建议买 2条 2G内存条，把插口都插满，可以用上`双通道`，提高传输效率。\n\n>**问：**什么程度的使用才需要用 4G 以上的内存？\n\n>**答：吃内存的大户是一些大型的程序和软件。**\n\n>例如，需要同时打开 `Photoshop`、`Illustrator`、`After Effects`、`Premiere Pro` 进行平面设计、视频剪辑、视频后期特效制作的；另外，光是 After Effects 就很吃内存了；\n\n>需要使用 `VirtualBox`、`VMware` 等虚拟机软件进行系统测试和软件开发测试工作的（当然，现在流行一个叫 `Vagrant` 的东西，可以为虚拟化有效减少内存占用的同时，保持开发环境与生产环境的一致性，提高多系统环境的测试成功率）；\n\n>看高清电影的（此高清是真高清，非你们平时所认为的高清。一个电影文件就 6G - 10+G 不等的那种高清电影。看高清电影同时需要 GPU 或 CPU 有良好的视频解码能力）。\n\n**推荐厂家：**`金士顿（Kingston）`、`三星（Samsung）`\n\n---\n\n######显卡（Graphics Card）\n**显卡的作用是，给显示器的画面输出提供强力的支持。**游戏玩家追求高画质的游戏画面的话，需要很贵的显卡就是这个意思。不玩大型游戏的话，前一年跟当年新上市的笔记本电脑，显卡性能都是不成问题的。然而，在选择电脑前，有三种显卡的概念必须先懂：`集成显卡`、`核芯显卡`、`独立显卡`。\n\n**集成显卡，是将显示芯片、显存及其相关电路都集成在电脑主板上的元件。**早年英特尔的集成显卡叫 `Intel GMA XXXX`，现在已经不多见了，基本已被核芯显卡取代。\n\n**核芯显卡，是 GPU（图形处理器）与 CPU 融合在同一芯片上的元件，也就是说核芯显卡是 CPU 里面一块负责图像处理的元器件。**英特尔核芯显卡的名字一般叫 `Intel HD Graphics XXXX` 或 `Intel Iris Graphics XXXX` 或 `Intel Iris Pro Graphics XXXX`（目前性能最强的系列，苹果 iMac 一体机部分机型使用此系列核芯显卡）。`XXXX` 一般是诸如 3000、4000、4600、5000、5100 这样的数字，数字越大，性能越强。在另一家处理器大厂 AMD 口中，自带核芯显卡的处理器叫做 `APU（加速处理器）`。\n\n**独立显卡，是将显示芯片、显存及其相关电路单独做在一块电路板上，自成一体而作为一块独立的板卡存在，需要占用主板上的扩展插槽。**类似于内存条，可以单独购买和更换。\n\n>问：为什么电脑已经有集成显卡或核芯显卡了，还需要一块独立显卡？\n\n>答：因为，一般而言，核芯显卡和集成显卡的性能都大不如独立显卡。\n\n==然而，有一个很奇怪的现象很多人可能不知道：通常，独立显卡在很多笔记本用户手里都是多余的，因为你们压根不知道有这个东西，还不给它安装最新的驱动程序，导致绝大部分小白用户其实一直在用集成显卡或核心显卡而已，并没有发挥独立显卡应有的用处。因此有一些不知情的游戏玩家抱怨说：我的独立显卡性能这么好，为什么游戏画质这么渣！？==\n\n**推荐厂家：**`技嘉（GIGABYTE）`、`华硕（ASUS）`、`影驰（Galaxy）`、`昂达（ONDA）`\n\n---\n\n######硬盘（Hard Disk）\n\n**硬盘的作用，应该不用我说了吧~~（呵呵宅男们！）~~：就是用来保存数据的！**硬盘容量越大，能存储的数据更多。\n\n==**然而，我多次重复同样的话：**在处理器、内存、显卡性能都够用的情况下，电脑的性能瓶颈就会出现在**硬盘**。==\n\n>**问：**目前市面上有哪几种品类的硬盘？\n\n>**答：**\n\n>- **传统的机械硬盘（HDD）**：完全机械结构，需要碟片转动和磁头寻道来读写数据，碟片有额定转速。性能一般够用。胜在容量大，还便宜；\n\n>- **固态硬盘（SSD）**：跟 U 盘、手机的存储介质相似，都是 NAND 闪存。无机械结构，理论上响应时间接近于 0。性能一般是传统机械硬盘的 4-8 倍，而且抗摔，但死贵；\n\n>- **混合硬盘（Hybrid Drive）**：既有机械硬盘的机械结构，又加入了固态硬盘的闪存颗粒。性能媲美固态硬盘，容量也大，性价比较高。苹果 iMac 系列产品线就用了混合硬盘，叫 Fusion Drive。\n\n**那么，什么程度的使用才需要固态硬盘（SSD）？**\n\n- 厌倦了机械硬盘的渣速度；\n- 希望 10 秒内完成开机，5 秒内完成关机；\n- 希望小型软件的冷启动无需等待；\n- 希望 3 秒内打开 Photoshop、After Effects 等大型创作类软件；\n- 希望粘贴、解压、安装、卸载等操作不浪费你的宝贵时间。\n\n==当然，以上结论都建立在你正在使用 Windows 8 或更新的操作系统，并且 CPU、RAM、显卡等性能过关的前提下。==\n\n**机械硬盘推荐厂家：**`希捷（Seagate）`、`西部数据（WD）`、`东芝（TOSHIBA）`\n\n**固态硬盘推荐厂家：**`三星（Samsung）`、`浦科特（PLEXTOR）`、`英特尔（Intel）`、`金士顿（Kingston）`\n\n**硬盘推荐搭配：**\n\n- **纯机械硬盘：**`1T`（*针对不追求硬盘性能的用户*）\n- **纯固态硬盘：**`256G`（*针对资料不多的用户。哪有那么多资料要收藏啊，一般够用*）\n- **机械+固态：**`128G 固态 + 500G/1T 机械`（*针对喜欢收藏电影、图片、音乐的用户。需要有一定的动手能力，将笔记本电脑 DVD 光驱位改为硬盘位。固态硬盘安装 Windows 操作系统和大型软件，机械硬盘用于存放不经常使用的收藏资料*）\n- （混合硬盘没使用过，无法给你们推荐）\n\n---\n\n######购买建议 & 升级路径\n\n**笔记本电脑购买渠道：**\n\n1. 到苏宁、国美、百脑汇这样的电子百货商场购买（电脑配置都是固定的，不能在购买前自行 DIY 配置。大部分在售的 3000-4500 RMB 的中端配置笔记本都用的是机械硬盘）；\n2. 到京东、亚马逊这种 B2C 电商平台购买（同上）\n3. 到电脑城购买（**购买时，可按照自己的要求配置 RAM 和硬盘**）\n\n**笔记本电脑升级路径：**\n\n1. **先忍，再爽：**先买固定配置的，用了 2 年后，可把内存增加一倍，用了 3 年后，可把机械硬盘更换为固态硬盘。或者内存够用的情况下，在第 2 年直接更换固态硬盘。这种方式可以保证电脑在 4 年内够用（只是机械硬盘的数据弄到新的固态硬盘上，比较麻烦）。\n2. **先爽了再说：**在懂行情的朋友的带领下，去电脑城按照自己的要求配置 RAM 和硬盘（笔记本电脑的 CPU 和显卡是无法更换的喔！重点是货比三家）\n\n---\n\n######性能配置汇总（X 均表示数字）：\n\n1. **CPU：**`Intel Core i5 5XXX` 或 `Intel Core i5 6XXX` 或 `Intel Core i3 6XXX` （六代为最新）；\n2. **内存：**至少 `4G`；\n3. **核芯显卡：**可有可无，一般 Intel 都会自带。目前最新的是 `Intel HD Graphics 4600` 和 `Intel Iris Pro Graphics 5100`（一般用在高端电脑）；\n4. **独立显卡：**必须得有，超薄本、超极本除外。推荐芯片 `NVIDIA GeForce GT 7XXM` 或以上 或 `AMD Radeon R5` 或 `R7` 系列。\n\n---\n\n*不想折腾的土豪，请直接购买微软 ==Surface Book== 或苹果 ==MacBook Pro==，设计、开发、办公统统适用。OS X 平台还时不时有软件独占优势。*\n\n---\n\n###Step 2: 关于使用习惯\n\n==**总体思想是：**减少外来文件入口、归类整理软件和文件、取消软件自启动、保护个人文件安全、将突发事故概率降至最低。==\n\n1. 建议使用最新版 `Windows 10` 操作系统，至少使用 `Windows 8.1 with Update`（不用担心，Windows 8.1 没有软件和游戏兼容性问题。个人感觉 Windows 7 的转场动画比较拖沓）；\n2. 把个人资料存放在非系统盘，也就是说，个人资料==不要==存放在 `C 盘`和`桌面`（当无故死机或真的需要重装系统时，免得丢失数据）；\n3. 定时整理个人资料，并分类；\n4. 最好给每个硬盘分区人为地设定具体的分类，例如 C 盘安装系统和软件、D 盘放个人资料，E 盘放工作文件，F 盘放影视娱乐等内容……（届时，哪些文件能删、哪些不能删，自然一目了然）；\n5. ==两个月==更新一次`硬件驱动程序`（将硬件性能通过最新版的驱动程序充分发挥出来）；\n6. ==不要==使用各种第三方杀毒软件、安全卫士，建议打开 Windows 7 或以上系统自带的 `Windows Defender` 保护电脑安全（第三方安全软件只会拖慢电脑响应速度。对自己的日常使用习惯有信心的用户，可不使用任何安全防护软件，例如本宝宝的电脑已裸奔 N 年，一样好好的。清理电脑垃圾这种小事情，交给轻量级的垃圾清理软件即可）；\n7. ==打开==系统还原功能，每两周对 C 盘进行备份（以防突发事故，方便还原到最近一次系统正确配置）；\n8. 360安全卫士唯一的优点是：可以取消软件和服务自启动、电脑急救、清除顽固插件和顽固病毒。搞定之后，请把它卸载掉；要用的时候，再安装；\n9. 推荐使用`谷歌 Chrome 浏览器`，其次是 `Mozilla Firefox`（火狐浏览器），学会“==科学上网==”，并安装浏览器插件以达到网页浏览的最高效率（国产浏览器一没核心技术，二奇丑无比，三性能捉急，四可视区域太小，建议淘汰）；\n10. 建议把所有软件安装在同一个硬盘分区的 Program Files 文件夹下，方便统一管理（例如 D 盘的 Program Files 文件夹）；\n11. 建议安装并使用最新版软件；\n12. 安装软件时，请多留心眼，==去掉一些没必要的勾==（例如 QQ 在安装完的最后那个页面，会自动勾选“安装 QQ 音乐”、“安装 QQ 安全管家” 这些选项，需要一个个手动`去掉 √`，否则会自动安装这些没有必要的软件。加之，它们都会跟随系统自动启动，到时候就会把电脑拖慢。这也就是一开电脑，N 多不认识的软件同时自动打开的悲剧场面的由来）；\n13. 安装完软件后，建议首先进入设置页面，把下载文件夹改为你自行设定的所有软件的统一下载文件夹，例如 E 盘的“`下载`”文件夹；==并取消软件随电脑开机自动启动==；\n14. ==不安装和使用==奇奇怪怪、来历不明的软件；\n15. 右键菜单一长串的用户，请自行反思一下是哪个软件的设置问题吧。\n\n**遵循以上使用习惯，基本可以保证性能过关的电脑，不出现卡顿、无故死机、蓝屏、必须重装、丢失数据等坑爹情况……**\n\n---\n\n###Step 3: 推荐一些优秀软件和服务\n\n######Part 1: 日常使用必备\n- **系统镜像：**微软官方原版 Windows 10 镜像（用于安装 Windows 系统）\n- **系统增强：**软媒魔方绿色版（这个软件可以代替 360 安全卫士，且轻巧！请自行禁止该软件自动启动）\n- **浏览器：**Google Chrome（请自行登录谷歌账号并同步所有数据，设置为默认浏览器，浏览器字体设置为`微软雅黑`）\n- **浏览器插件：**鼠标手势：`crxMouse Chrome Gestures`、浏览器截图：`Nimbus Screenshot and Screencast`、广告拦截：`广告终结者`（目前无法屏蔽优酷广告，待官方升级）、`迅雷下载 Chrome 插件`\n- **压缩/解压：**2345好压（请自行设置为“右键菜单层叠”）\n- **输入法：**搜狗输入法 或 Windows 8/10 系统自带输入法（请自行登录账号并同步个性化词库数据，隐藏状态栏）\n- **杀毒/安全防护：**Windows 7 自带 `Windows Defender`、Windows 8/10 自带 `MSE（Microsoft Security Essential）`或不用\n- **聊天工具：**QQ 轻聊版、Windows 版微信\n- **下载：**迅雷精简版\n- **影音播放：**迅雷影音\n- **办公：**WPS Office + Microsoft Office 2013（前者用于日常使用，后者用于打开 WPS 打开后显示不正常的文件）；\n- **图片管理/浏览：**2345看图王（配合 2345 好压，无需解压即可连续查看压缩包内图片）、Google Picasa 3（图片分类管理）\n- **PDF 查阅：**Adobe Acrobat Reader DC、福昕 Foxit 阅读器\n- **音乐：**网易云音乐（逼格！编辑精选也很棒！）\n- **驱动程序管理/更新：**驱动精灵（保持驱动程序最新，发挥硬件最大效能）\n- **思维导图/流程图：**Mindjet MindManager 15 英文版、XMind（免费）、Visio Professional 2013\n- **笔记：**印象笔记、Office 套件中的 OneNote\n- **图片处理：**美图秀秀、Photoshop CC、LightRoom CC\n- **垃圾清理：**魔方 3、`CCleaner`\n- **软件升级/卸载：**魔方 3、`Geek Uninstaller`\n- **文件同步：**百度云管家、微软 OneDrive\n\n\n######Part 2: 开发人员必备\n\n- **科学上网服务（俗称“翻墙”、“梯子”）：**<u>Shadowsocks.com</u>\n- **本地 Mock Server/服务器环境：**XAMPP、phpStudy、LEMP、Vagrant、VirtualBox\n- **版本控制：**Github for Windows、TortoiseSVN、SourceTree\n- **Markdown 编辑器：**马克飞象、Markdown Pad\n- **文本编辑器（配合插件使用才能发挥最大效能）：**Sublime Text 3、Atom\n- **IDE：**Visual Studio 2012 或以上、Eclipse、Intellij IDEA、WebStorm、phpStorm\n- **系统包管理（软件管理）：**Chocolatey（仅针对 Windows 用户）、Homebrew（仅针对 OS X 用户）\n- **语言环境相关：**NodeJS（插件/工具/库：npm、cnpm、Bower、Yeoman、Gulp、Webpack、Normalize.css、Handlebars.js、Sass、PostCSS、BrowserSync、FIS3、Scrat、RequireJS、SeaJS、Fontmin……）、PHP（包管理：Composer）、Ruby（Gem、Compass）、Python（包管理：pip）、Java……\n- **前端框架：**Bootstrap、Semantic UI、Pure.css、jQuery、Zepto、Amaze UI、AngularJS、React、React Native、Meteor、Ionic……\n- **后端框架：**Laravel、Ruby on Rails、MEAN、Django、Spring……\n- **内容管理系统（CMS）：**WordPress、Drupal、帝国、织梦……\n- **数据库：**MySQL、MongoDB、PostgreSQL、SQL Server……\n- **Android 开发：**Android Studio、Eclipse、JDK、SDK、ADT\n- **iOS 开发：**OS X、Xcode、iPhone/iPad\n\n\n######Part 3: 设计人员必备\n- **科学上网服务：**<u>Shadowsocks.com</u>\n- **平面设计、视频剪辑、视频特效：**Adobe Creative Cloud 全套（主要为 Photoshop CC、Illustrator CC、Bridge CC、After Effects CC、Premiere Pro CC、Audition、InDesign）、会声会影、CorelDRAW Graphics Suit\n- **.mov 格式视频输出必备：**QuickTime\n- **产品原型：**Balsamiq Mockups 3、Axure PR Pro 7\n- **交互设计：**Axure PR Pro 7、After Effects CC、Flash Professional、Edge Animate CC、POP、Quartz Composer、Origami、Keynote（后三款仅针对 OS X 用户）\n- **UI 设计：**Photoshop CC、Illustrator CC、Sketch 3（仅针对 OS X 用户）、Muse CC\n- **图片/照片修饰与处理：**LightRoom CC、Photoshop CC、VSCO Cam、SnapSeed\n- **工具：**PxCook（设计稿标注）、GuideGuide（Photoshop 参考线插件）、Kuler（Photoshop 配色插件）、DevRocket（UI 设计套件 for Photoshop，集成素材、模板、切图等功能）\n- **三维软件：**3ds Max、Rhino、Cinema 4D、Maya\n- **二维制图：**AutoCAD……\n\n\n######Part 4: 团队必备\n- **科学上网服务：**<u>Shadowsocks.com</u>\n- **文档协作：**石墨文档、Google Docs\n- **团队协作：**Teambition、Worktile\n- **代码托管：**Github、开源中国\n- **在线作图：**ProcessOn、百度脑图\n- **投票/约会/活动报名：**<u>fabu.io</u>\n\n\n**电脑性能过关，多注重养成良好的日常使用习惯，掌握“科学上网”方法，使用最优秀的软件和服务，电脑便能咻咻地一路狂奔！**\n","html":"<p>我从 08 年接触互联网开始玩电脑，一折腾就是 5 年。这几年来，可以说 <code>PC</code> 和 <code>Windows</code> 一直都没什么太大的变化。配置在稳步提升，安装越来越简单而已。然而，对比 <code>OS X</code>，微软一直无法解决的问题是：<strong>在中国这个大环境下，针对小白用户和盗版用户，Windows 永远无法摆脱越用越卡的魔咒</strong>（导致不少人一会儿就重装一次系统。且不说盗版是非法行为）。</p>\n\n<p><strong>总有人时不时问我，电脑好卡，怎么办？</strong></p>\n\n<blockquote>\n  <p>我给出的结论通常是：一是电脑性能确实不过关，二是使用习惯不好。</p>\n</blockquote>\n\n<p><strong>下面，我将从<code>电脑性能</code>和<code>日常使用习惯</code>入手，手把手教你如何一步步<code>加速</code>你的电脑。这样，妈妈再也不用担心你的电脑突然死机、丢失论文，收藏多年的图片莫名其妙地消失啦！最后，推荐一些优秀<code>日常办公软件</code>和<code>专业软件</code>，帮助你们快速找到最佳助手，提高工作效率。</strong></p>\n\n<hr />\n\n<h3 id=\"step1\">Step 1: 关于性能</h3>\n\n<blockquote>\n  <p><strong>问：</strong>怎样的电脑配置才算性能过关（只针对日常办公、普通影音娱乐，配以小型游戏）？</p>\n  \n  <p><strong>答：</strong>台式机 和 Notebook，无非就几大件：<strong><code>CPU（处理器）</code></strong>、<strong><code>RAM（运行内存）</code></strong>、<strong><code>显卡</code></strong>、<strong><code>硬盘</code></strong>。</p>\n</blockquote>\n\n<p><strong>选硬件配置，三条原则：</strong></p>\n\n<ol>\n<li>选大厂、大品牌；  </li>\n<li>给性能升级留点空间；  </li>\n<li>多了解技术参数，而不是用户对品牌的抱怨。</li>\n</ol>\n\n<hr />\n\n<h6 id=\"cpu\">处理器（CPU）</h6>\n\n<p><strong>CPU 的作用是，计算和控制，即为处理。</strong>能用上 <code>Intel Core i</code> 系列（英特尔酷睿 i 系列）的电脑，处理器性能问题都不大，例如 Intel i3、i5、i7。当然英特尔每年都会推出新一代的 i 系列处理器，这也就是有诸如此类处理器的原因：<code>Intel Core i5 4460</code>……“<code>i5</code>”后面跟着的四个数字，第一个数字“<code>4</code>”意味着处理器的代数。2015 年，<code>Intel Core i</code> 系列已经出到第六代了。</p>\n\n<p>所以，在 CPU 的选择上，除了至少要用 <code>i 系列</code>，最好还要用去年或今年上市销售的产品（这里推荐用 <code>i5</code>。去 <a href=\"http://product.pconline.com.cn/notebook/search.shtml\">太平洋电脑网</a> 或 <a href=\"http://detail.zol.com.cn/notebook_index/subcate16_list_1.html\">中关村在线</a> 查一下今年上市的英特尔处理器即可。</p>\n\n<p><mark>由于本人对英特尔其他系列处理器不太了解，例如<code>奔腾系列</code>、<code>至强系列</code>，所以不作介绍。至强系列是高性能产品线。然而，还有一个处理器大厂，叫 <code>AMD</code>。对其不太了解，故也不作介绍。反正 CPU 选英特尔准没错。</mark></p>\n\n<p><strong>推荐厂家：</strong><code>英特尔（Intel）</code></p>\n\n<p><strong>推荐产品线：</strong>英特尔酷睿 i 系列（<code>Intel Core i</code> 系列）</p>\n\n<hr />\n\n<h6 id=\"ram\">运行内存（RAM）</h6>\n\n<p><strong>RAM 的作用是，让你能同时运行更多的程序、软件，以及允许你在程序间切换时不卡顿。</strong><mark>目前来说，4G 运行内存够用。</mark></p>\n\n<p>然而，大部分笔记本只有两个内存条插口。如果买了 2 条 2G 内存条，把两个插口都插满了。2、3 年之后想增加内存的话，就比较尴尬，此时可以买 1条 4G 内存条，留一个插口以后性能升级时用。当然，如果 4G 内存足够使用的话，建议买 2条 2G内存条，把插口都插满，可以用上<code>双通道</code>，提高传输效率。</p>\n\n<blockquote>\n  <p><strong>问：</strong>什么程度的使用才需要用 4G 以上的内存？</p>\n  \n  <p><strong>答：吃内存的大户是一些大型的程序和软件。</strong></p>\n  \n  <p>例如，需要同时打开 <code>Photoshop</code>、<code>Illustrator</code>、<code>After Effects</code>、<code>Premiere Pro</code> 进行平面设计、视频剪辑、视频后期特效制作的；另外，光是 After Effects 就很吃内存了；</p>\n  \n  <p>需要使用 <code>VirtualBox</code>、<code>VMware</code> 等虚拟机软件进行系统测试和软件开发测试工作的（当然，现在流行一个叫 <code>Vagrant</code> 的东西，可以为虚拟化有效减少内存占用的同时，保持开发环境与生产环境的一致性，提高多系统环境的测试成功率）；</p>\n  \n  <p>看高清电影的（此高清是真高清，非你们平时所认为的高清。一个电影文件就 6G - 10+G 不等的那种高清电影。看高清电影同时需要 GPU 或 CPU 有良好的视频解码能力）。</p>\n</blockquote>\n\n<p><strong>推荐厂家：</strong><code>金士顿（Kingston）</code>、<code>三星（Samsung）</code></p>\n\n<hr />\n\n<h6 id=\"graphicscard\">显卡（Graphics Card）</h6>\n\n<p><strong>显卡的作用是，给显示器的画面输出提供强力的支持。</strong>游戏玩家追求高画质的游戏画面的话，需要很贵的显卡就是这个意思。不玩大型游戏的话，前一年跟当年新上市的笔记本电脑，显卡性能都是不成问题的。然而，在选择电脑前，有三种显卡的概念必须先懂：<code>集成显卡</code>、<code>核芯显卡</code>、<code>独立显卡</code>。</p>\n\n<p><strong>集成显卡，是将显示芯片、显存及其相关电路都集成在电脑主板上的元件。</strong>早年英特尔的集成显卡叫 <code>Intel GMA XXXX</code>，现在已经不多见了，基本已被核芯显卡取代。</p>\n\n<p><strong>核芯显卡，是 GPU（图形处理器）与 CPU 融合在同一芯片上的元件，也就是说核芯显卡是 CPU 里面一块负责图像处理的元器件。</strong>英特尔核芯显卡的名字一般叫 <code>Intel HD Graphics XXXX</code> 或 <code>Intel Iris Graphics XXXX</code> 或 <code>Intel Iris Pro Graphics XXXX</code>（目前性能最强的系列，苹果 iMac 一体机部分机型使用此系列核芯显卡）。<code>XXXX</code> 一般是诸如 3000、4000、4600、5000、5100 这样的数字，数字越大，性能越强。在另一家处理器大厂 AMD 口中，自带核芯显卡的处理器叫做 <code>APU（加速处理器）</code>。</p>\n\n<p><strong>独立显卡，是将显示芯片、显存及其相关电路单独做在一块电路板上，自成一体而作为一块独立的板卡存在，需要占用主板上的扩展插槽。</strong>类似于内存条，可以单独购买和更换。</p>\n\n<blockquote>\n  <p>问：为什么电脑已经有集成显卡或核芯显卡了，还需要一块独立显卡？</p>\n  \n  <p>答：因为，一般而言，核芯显卡和集成显卡的性能都大不如独立显卡。</p>\n</blockquote>\n\n<p><mark>然而，有一个很奇怪的现象很多人可能不知道：通常，独立显卡在很多笔记本用户手里都是多余的，因为你们压根不知道有这个东西，还不给它安装最新的驱动程序，导致绝大部分小白用户其实一直在用集成显卡或核心显卡而已，并没有发挥独立显卡应有的用处。因此有一些不知情的游戏玩家抱怨说：我的独立显卡性能这么好，为什么游戏画质这么渣！？</mark></p>\n\n<p><strong>推荐厂家：</strong><code>技嘉（GIGABYTE）</code>、<code>华硕（ASUS）</code>、<code>影驰（Galaxy）</code>、<code>昂达（ONDA）</code></p>\n\n<hr />\n\n<h6 id=\"harddisk\">硬盘（Hard Disk）</h6>\n\n<p><strong>硬盘的作用，应该不用我说了吧<del>（呵呵宅男们！）</del>：就是用来保存数据的！</strong>硬盘容量越大，能存储的数据更多。</p>\n\n<p><mark><strong>然而，我多次重复同样的话：</strong>在处理器、内存、显卡性能都够用的情况下，电脑的性能瓶颈就会出现在<strong>硬盘</strong>。</mark></p>\n\n<blockquote>\n  <p><strong>问：</strong>目前市面上有哪几种品类的硬盘？</p>\n  \n  <p><strong>答：</strong></p>\n  \n  <ul>\n  <li><p><strong>传统的机械硬盘（HDD）</strong>：完全机械结构，需要碟片转动和磁头寻道来读写数据，碟片有额定转速。性能一般够用。胜在容量大，还便宜；</p></li>\n  <li><p><strong>固态硬盘（SSD）</strong>：跟 U 盘、手机的存储介质相似，都是 NAND 闪存。无机械结构，理论上响应时间接近于 0。性能一般是传统机械硬盘的 4-8 倍，而且抗摔，但死贵；</p></li>\n  <li><p><strong>混合硬盘（Hybrid Drive）</strong>：既有机械硬盘的机械结构，又加入了固态硬盘的闪存颗粒。性能媲美固态硬盘，容量也大，性价比较高。苹果 iMac 系列产品线就用了混合硬盘，叫 Fusion Drive。</p></li>\n  </ul>\n</blockquote>\n\n<p><strong>那么，什么程度的使用才需要固态硬盘（SSD）？</strong></p>\n\n<ul>\n<li>厌倦了机械硬盘的渣速度；</li>\n<li>希望 10 秒内完成开机，5 秒内完成关机；</li>\n<li>希望小型软件的冷启动无需等待；</li>\n<li>希望 3 秒内打开 Photoshop、After Effects 等大型创作类软件；</li>\n<li>希望粘贴、解压、安装、卸载等操作不浪费你的宝贵时间。</li>\n</ul>\n\n<p><mark>当然，以上结论都建立在你正在使用 Windows 8 或更新的操作系统，并且 CPU、RAM、显卡等性能过关的前提下。</mark></p>\n\n<p><strong>机械硬盘推荐厂家：</strong><code>希捷（Seagate）</code>、<code>西部数据（WD）</code>、<code>东芝（TOSHIBA）</code></p>\n\n<p><strong>固态硬盘推荐厂家：</strong><code>三星（Samsung）</code>、<code>浦科特（PLEXTOR）</code>、<code>英特尔（Intel）</code>、<code>金士顿（Kingston）</code></p>\n\n<p><strong>硬盘推荐搭配：</strong></p>\n\n<ul>\n<li><strong>纯机械硬盘：</strong><code>1T</code>（<em>针对不追求硬盘性能的用户</em>）</li>\n<li><strong>纯固态硬盘：</strong><code>256G</code>（<em>针对资料不多的用户。哪有那么多资料要收藏啊，一般够用</em>）</li>\n<li><strong>机械+固态：</strong><code>128G 固态 + 500G/1T 机械</code>（<em>针对喜欢收藏电影、图片、音乐的用户。需要有一定的动手能力，将笔记本电脑 DVD 光驱位改为硬盘位。固态硬盘安装 Windows 操作系统和大型软件，机械硬盘用于存放不经常使用的收藏资料</em>）</li>\n<li>（混合硬盘没使用过，无法给你们推荐）</li>\n</ul>\n\n<hr />\n\n<h6 id=\"\">购买建议 &amp; 升级路径</h6>\n\n<p><strong>笔记本电脑购买渠道：</strong></p>\n\n<ol>\n<li>到苏宁、国美、百脑汇这样的电子百货商场购买（电脑配置都是固定的，不能在购买前自行 DIY 配置。大部分在售的 3000-4500 RMB 的中端配置笔记本都用的是机械硬盘）；  </li>\n<li>到京东、亚马逊这种 B2C 电商平台购买（同上）  </li>\n<li>到电脑城购买（<strong>购买时，可按照自己的要求配置 RAM 和硬盘</strong>）</li>\n</ol>\n\n<p><strong>笔记本电脑升级路径：</strong></p>\n\n<ol>\n<li><strong>先忍，再爽：</strong>先买固定配置的，用了 2 年后，可把内存增加一倍，用了 3 年后，可把机械硬盘更换为固态硬盘。或者内存够用的情况下，在第 2 年直接更换固态硬盘。这种方式可以保证电脑在 4 年内够用（只是机械硬盘的数据弄到新的固态硬盘上，比较麻烦）。  </li>\n<li><strong>先爽了再说：</strong>在懂行情的朋友的带领下，去电脑城按照自己的要求配置 RAM 和硬盘（笔记本电脑的 CPU 和显卡是无法更换的喔！重点是货比三家）</li>\n</ol>\n\n<hr />\n\n<h6 id=\"x\">性能配置汇总（X 均表示数字）：</h6>\n\n<ol>\n<li><strong>CPU：</strong><code>Intel Core i5 5XXX</code> 或 <code>Intel Core i5 6XXX</code> 或 <code>Intel Core i3 6XXX</code> （六代为最新）；  </li>\n<li><strong>内存：</strong>至少 <code>4G</code>；  </li>\n<li><strong>核芯显卡：</strong>可有可无，一般 Intel 都会自带。目前最新的是 <code>Intel HD Graphics 4600</code> 和 <code>Intel Iris Pro Graphics 5100</code>（一般用在高端电脑）；  </li>\n<li><strong>独立显卡：</strong>必须得有，超薄本、超极本除外。推荐芯片 <code>NVIDIA GeForce GT 7XXM</code> 或以上 或 <code>AMD Radeon R5</code> 或 <code>R7</code> 系列。</li>\n</ol>\n\n<hr />\n\n<p><em>不想折腾的土豪，请直接购买微软 <mark>Surface Book</mark> 或苹果 <mark>MacBook Pro</mark>，设计、开发、办公统统适用。OS X 平台还时不时有软件独占优势。</em></p>\n\n<hr />\n\n<h3 id=\"step2\">Step 2: 关于使用习惯</h3>\n\n<p><mark><strong>总体思想是：</strong>减少外来文件入口、归类整理软件和文件、取消软件自启动、保护个人文件安全、将突发事故概率降至最低。</mark></p>\n\n<ol>\n<li>建议使用最新版 <code>Windows 10</code> 操作系统，至少使用 <code>Windows 8.1 with Update</code>（不用担心，Windows 8.1 没有软件和游戏兼容性问题。个人感觉 Windows 7 的转场动画比较拖沓）；  </li>\n<li>把个人资料存放在非系统盘，也就是说，个人资料<mark>不要</mark>存放在 <code>C 盘</code>和<code>桌面</code>（当无故死机或真的需要重装系统时，免得丢失数据）；  </li>\n<li>定时整理个人资料，并分类；  </li>\n<li>最好给每个硬盘分区人为地设定具体的分类，例如 C 盘安装系统和软件、D 盘放个人资料，E 盘放工作文件，F 盘放影视娱乐等内容……（届时，哪些文件能删、哪些不能删，自然一目了然）；  </li>\n<li><mark>两个月</mark>更新一次<code>硬件驱动程序</code>（将硬件性能通过最新版的驱动程序充分发挥出来）；  </li>\n<li><mark>不要</mark>使用各种第三方杀毒软件、安全卫士，建议打开 Windows 7 或以上系统自带的 <code>Windows Defender</code> 保护电脑安全（第三方安全软件只会拖慢电脑响应速度。对自己的日常使用习惯有信心的用户，可不使用任何安全防护软件，例如本宝宝的电脑已裸奔 N 年，一样好好的。清理电脑垃圾这种小事情，交给轻量级的垃圾清理软件即可）；  </li>\n<li><mark>打开</mark>系统还原功能，每两周对 C 盘进行备份（以防突发事故，方便还原到最近一次系统正确配置）；  </li>\n<li>360安全卫士唯一的优点是：可以取消软件和服务自启动、电脑急救、清除顽固插件和顽固病毒。搞定之后，请把它卸载掉；要用的时候，再安装；  </li>\n<li>推荐使用<code>谷歌 Chrome 浏览器</code>，其次是 <code>Mozilla Firefox</code>（火狐浏览器），学会“<mark>科学上网</mark>”，并安装浏览器插件以达到网页浏览的最高效率（国产浏览器一没核心技术，二奇丑无比，三性能捉急，四可视区域太小，建议淘汰）；  </li>\n<li>建议把所有软件安装在同一个硬盘分区的 Program Files 文件夹下，方便统一管理（例如 D 盘的 Program Files 文件夹）；  </li>\n<li>建议安装并使用最新版软件；  </li>\n<li>安装软件时，请多留心眼，<mark>去掉一些没必要的勾</mark>（例如 QQ 在安装完的最后那个页面，会自动勾选“安装 QQ 音乐”、“安装 QQ 安全管家” 这些选项，需要一个个手动<code>去掉 √</code>，否则会自动安装这些没有必要的软件。加之，它们都会跟随系统自动启动，到时候就会把电脑拖慢。这也就是一开电脑，N 多不认识的软件同时自动打开的悲剧场面的由来）；  </li>\n<li>安装完软件后，建议首先进入设置页面，把下载文件夹改为你自行设定的所有软件的统一下载文件夹，例如 E 盘的“<code>下载</code>”文件夹；<mark>并取消软件随电脑开机自动启动</mark>；  </li>\n<li><mark>不安装和使用</mark>奇奇怪怪、来历不明的软件；  </li>\n<li>右键菜单一长串的用户，请自行反思一下是哪个软件的设置问题吧。</li>\n</ol>\n\n<p><strong>遵循以上使用习惯，基本可以保证性能过关的电脑，不出现卡顿、无故死机、蓝屏、必须重装、丢失数据等坑爹情况……</strong></p>\n\n<hr />\n\n<h3 id=\"step3\">Step 3: 推荐一些优秀软件和服务</h3>\n\n<h6 id=\"part1\">Part 1: 日常使用必备</h6>\n\n<ul>\n<li><strong>系统镜像：</strong>微软官方原版 Windows 10 镜像（用于安装 Windows 系统）</li>\n<li><strong>系统增强：</strong>软媒魔方绿色版（这个软件可以代替 360 安全卫士，且轻巧！请自行禁止该软件自动启动）</li>\n<li><strong>浏览器：</strong>Google Chrome（请自行登录谷歌账号并同步所有数据，设置为默认浏览器，浏览器字体设置为<code>微软雅黑</code>）</li>\n<li><strong>浏览器插件：</strong>鼠标手势：<code>crxMouse Chrome Gestures</code>、浏览器截图：<code>Nimbus Screenshot and Screencast</code>、广告拦截：<code>广告终结者</code>（目前无法屏蔽优酷广告，待官方升级）、<code>迅雷下载 Chrome 插件</code></li>\n<li><strong>压缩/解压：</strong>2345好压（请自行设置为“右键菜单层叠”）</li>\n<li><strong>输入法：</strong>搜狗输入法 或 Windows 8/10 系统自带输入法（请自行登录账号并同步个性化词库数据，隐藏状态栏）</li>\n<li><strong>杀毒/安全防护：</strong>Windows 7 自带 <code>Windows Defender</code>、Windows 8/10 自带 <code>MSE（Microsoft Security Essential）</code>或不用</li>\n<li><strong>聊天工具：</strong>QQ 轻聊版、Windows 版微信</li>\n<li><strong>下载：</strong>迅雷精简版</li>\n<li><strong>影音播放：</strong>迅雷影音</li>\n<li><strong>办公：</strong>WPS Office + Microsoft Office 2013（前者用于日常使用，后者用于打开 WPS 打开后显示不正常的文件）；</li>\n<li><strong>图片管理/浏览：</strong>2345看图王（配合 2345 好压，无需解压即可连续查看压缩包内图片）、Google Picasa 3（图片分类管理）</li>\n<li><strong>PDF 查阅：</strong>Adobe Acrobat Reader DC、福昕 Foxit 阅读器</li>\n<li><strong>音乐：</strong>网易云音乐（逼格！编辑精选也很棒！）</li>\n<li><strong>驱动程序管理/更新：</strong>驱动精灵（保持驱动程序最新，发挥硬件最大效能）</li>\n<li><strong>思维导图/流程图：</strong>Mindjet MindManager 15 英文版、XMind（免费）、Visio Professional 2013</li>\n<li><strong>笔记：</strong>印象笔记、Office 套件中的 OneNote</li>\n<li><strong>图片处理：</strong>美图秀秀、Photoshop CC、LightRoom CC</li>\n<li><strong>垃圾清理：</strong>魔方 3、<code>CCleaner</code></li>\n<li><strong>软件升级/卸载：</strong>魔方 3、<code>Geek Uninstaller</code></li>\n<li><strong>文件同步：</strong>百度云管家、微软 OneDrive</li>\n</ul>\n\n<h6 id=\"part2\">Part 2: 开发人员必备</h6>\n\n<ul>\n<li><strong>科学上网服务（俗称“翻墙”、“梯子”）：</strong><u>Shadowsocks.com</u></li>\n<li><strong>本地 Mock Server/服务器环境：</strong>XAMPP、phpStudy、LEMP、Vagrant、VirtualBox</li>\n<li><strong>版本控制：</strong>Github for Windows、TortoiseSVN、SourceTree</li>\n<li><strong>Markdown 编辑器：</strong>马克飞象、Markdown Pad</li>\n<li><strong>文本编辑器（配合插件使用才能发挥最大效能）：</strong>Sublime Text 3、Atom</li>\n<li><strong>IDE：</strong>Visual Studio 2012 或以上、Eclipse、Intellij IDEA、WebStorm、phpStorm</li>\n<li><strong>系统包管理（软件管理）：</strong>Chocolatey（仅针对 Windows 用户）、Homebrew（仅针对 OS X 用户）</li>\n<li><strong>语言环境相关：</strong>NodeJS（插件/工具/库：npm、cnpm、Bower、Yeoman、Gulp、Webpack、Normalize.css、Handlebars.js、Sass、PostCSS、BrowserSync、FIS3、Scrat、RequireJS、SeaJS、Fontmin……）、PHP（包管理：Composer）、Ruby（Gem、Compass）、Python（包管理：pip）、Java……</li>\n<li><strong>前端框架：</strong>Bootstrap、Semantic UI、Pure.css、jQuery、Zepto、Amaze UI、AngularJS、React、React Native、Meteor、Ionic……</li>\n<li><strong>后端框架：</strong>Laravel、Ruby on Rails、MEAN、Django、Spring……</li>\n<li><strong>内容管理系统（CMS）：</strong>WordPress、Drupal、帝国、织梦……</li>\n<li><strong>数据库：</strong>MySQL、MongoDB、PostgreSQL、SQL Server……</li>\n<li><strong>Android 开发：</strong>Android Studio、Eclipse、JDK、SDK、ADT</li>\n<li><strong>iOS 开发：</strong>OS X、Xcode、iPhone/iPad</li>\n</ul>\n\n<h6 id=\"part3\">Part 3: 设计人员必备</h6>\n\n<ul>\n<li><strong>科学上网服务：</strong><u>Shadowsocks.com</u></li>\n<li><strong>平面设计、视频剪辑、视频特效：</strong>Adobe Creative Cloud 全套（主要为 Photoshop CC、Illustrator CC、Bridge CC、After Effects CC、Premiere Pro CC、Audition、InDesign）、会声会影、CorelDRAW Graphics Suit</li>\n<li><strong>.mov 格式视频输出必备：</strong>QuickTime</li>\n<li><strong>产品原型：</strong>Balsamiq Mockups 3、Axure PR Pro 7</li>\n<li><strong>交互设计：</strong>Axure PR Pro 7、After Effects CC、Flash Professional、Edge Animate CC、POP、Quartz Composer、Origami、Keynote（后三款仅针对 OS X 用户）</li>\n<li><strong>UI 设计：</strong>Photoshop CC、Illustrator CC、Sketch 3（仅针对 OS X 用户）、Muse CC</li>\n<li><strong>图片/照片修饰与处理：</strong>LightRoom CC、Photoshop CC、VSCO Cam、SnapSeed</li>\n<li><strong>工具：</strong>PxCook（设计稿标注）、GuideGuide（Photoshop 参考线插件）、Kuler（Photoshop 配色插件）、DevRocket（UI 设计套件 for Photoshop，集成素材、模板、切图等功能）</li>\n<li><strong>三维软件：</strong>3ds Max、Rhino、Cinema 4D、Maya</li>\n<li><strong>二维制图：</strong>AutoCAD……</li>\n</ul>\n\n<h6 id=\"part4\">Part 4: 团队必备</h6>\n\n<ul>\n<li><strong>科学上网服务：</strong><u>Shadowsocks.com</u></li>\n<li><strong>文档协作：</strong>石墨文档、Google Docs</li>\n<li><strong>团队协作：</strong>Teambition、Worktile</li>\n<li><strong>代码托管：</strong>Github、开源中国</li>\n<li><strong>在线作图：</strong>ProcessOn、百度脑图</li>\n<li><strong>投票/约会/活动报名：</strong><u>fabu.io</u></li>\n</ul>\n\n<p><strong>电脑性能过关，多注重养成良好的日常使用习惯，掌握“科学上网”方法，使用最优秀的软件和服务，电脑便能咻咻地一路狂奔！</strong></p>","image":"/content/images/2015/11/Accelerate-your-computer-1.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":"电脑，怎样才能不卡？","meta_description":"Windows 电脑，怎样才能不卡顿？电脑小白都需要知道的 Windows 系统优化技巧和使用习惯大全！妈妈再也不用担心我的电脑突然死机、丢失论文、图片不翼而飞","author_id":1,"created_at":1446565421639,"created_by":1,"updated_at":1446815307260,"updated_by":1,"published_at":1446652025458,"published_by":1},{"id":5,"uuid":"237ca9cc-6010-44a2-a7fd-e4067be8a705","title":"平行空间大事记暨官网上线历程","slug":"parallel-space-website-launched","markdown":"## 关于我们\n\n如果你不了解`平行空间`，建议先看看我们的团队官网：[www.parallelspace.cn](http://www.parallelspace.cn)\n\n>**温馨提示**：用不同屏幕宽度的设备浏览页面，会有不一样的显示效果喔~\n\n## 官网效果展示\n\n**iPhone 上的效果：**\n\n![iPhone 效果展示](/content/images/2015/11/iPhone-Preview.png)\n\n**iPad 上的效果：**\n\n![iPad 效果展示](/content/images/2015/11/iPad-Preview.png)\n\n**普通桌面电脑上的效果：**\n\n![普通桌面电脑效果展示](/content/images/2015/11/Desktop-Preview.png)\n\n**大屏桌面电脑上的效果：**\n\n![大屏桌面电脑效果展示](/content/images/2015/11/LargeScreen-Preview.png)\n\n### 官网登上爱范儿 MindStore\n\n官网上线后，我试着给爱范儿 MindStore 提交“产品”，没想到第二天团队官网就出现在了 MindStore 首页，排在第三位，仅次于秀米和智能婴儿车。详情戳这里：[Parallel Space on MindStore](http://mindstore.io/mind/6776)\n\n>**一支无名团队凭借一个单页静态官网，登上了 MindStore，我个人觉得是官网的颜值打动了负责审核的工作人员了。**\n\n**当时的截图：**\n\n![平行空间登上 MindStore](/content/images/2015/11/ParallelSpace-on-MindStore.png)\n\n\n## Timeline 回顾\n\n本来这篇博文应该纯粹记录官网上线历程的，但是发现团队成立后并没有做过大事记，遂一并记录吧：\n\n- 2015 年 5 月，平行空间团队成立。那会儿频繁的会议，密集的工作安排，压得人有点喘不过气来。期间，平行空间招新工作顺利完成，团队注入新鲜血液；制定了 2015 下半年计划；\n- 2015 年 6 月，零零散散的一些技术研发和维护工作，以及团队整顿工作；\n- 2015 年 7 月上旬，学期末，以团队名义第一次参加比赛——“第二届‘恺炬杯’惠州创新创业大赛暨首届仲恺高新区 APP 设计大赛”（参赛经历有限，优秀奖，但也确实总结了些经验教训）；\n- 2015 年 7 月中下旬，暑假在家，各有各的事儿；\n- 2015 年 8 月，按计划提前一个月回校，协同工作；\n- 2015 年 9 月，开学推广活动，转化效果正常；\n- 2015 年 10 月，由于上课、实习等种种原因，部分产品开发周期被迫延长……但官网于 11 日如期上线；中下旬比较平静，主要是团队内部建设；\n- 2015 年 11 月上旬，也就是这三天，光棍节“派 TT”活动，效果很棒！\n\n\n## 进入正题：技术理解+官网上线\n\n### 计划 ≠ 实际？\n\n从 5 月份制定计划，7 月份暑假在家真正开始着手这件事儿，到 10 月 11 日正式上线。这时间跨度足足有 3 个月。然而，正如你所看到的一样，官网只有一个页面。对，还是一个静态页面。**可能有人想吐槽了：这么简单的东西我半天就可以搞定！你居然花了 3 个月？而且，这东西谈何技术栈！**\n\n且慢，请允许我娓娓道来……\n\n### 真相只有一个\n\n>**事情是这样的：**真正做这个官网页面，我花了两天用于设计、两天空闲时间用于编码（由于完美主义情节和强迫症，也确实是稍微慢了一点点）。而其余时间，都在升级对前端的认知，学习前端知识，筛选工具，做技术选型的工作。\n\n**对前端稍微了解的小伙伴都应该知道：**一个简单的前端项目，既可以用最简单的原生方法进行开发和维护，又可以用复杂的工程化手段进行开发+优化+维护，甚至可以针对目前的主流设备，做到页内图片、页面排版 1:1 近乎完美还原……\n\n那么，对于一个完美主义者和报废设计师，如何平衡项目开发周期和项目还原度，变得尤为难以抉择。然而，从严格意义上看，这是我第一个“==对外可见==”的项目（以前的项目都是微信公众号内 Webview 小功能页面）。**所以这一次，我决定发挥我的完美主义主观能动性 O(∩_∩)O哈哈~**\n\n### 不谈设计\n\n虽然官网颜值确实很高，但是今天我不打算谈论这个。\n\n### 只谈技术与理解\n\n#### 说说什么是“H5”\n\n“H5”这个说法其实相当的“蛋疼”。依稀记得，我是在刘健亮的微信公众号上看到这个说法。当时还迟疑了下，“H5”是什么鬼……后来才知道，“微信运营们”把在微信朋友圈里传播的那种酷炫、能滑动的 Bling Bling 的页面集合叫“H5”。\n\n>**HTML5 表示受到了一万点伤害……**\n\n**按照我的个人理解简单解释一下：**\n\n>**`HTML` 是 `W3C` 定义的一种用于组织网页结构和内容的超文本标记语言。**`HTML5` 是 HTML 的第五个版本，新增了很多新特性，为构建适合移动设备的网页、网站等提供了标准上的支持。\n\n>**而所谓的“H5”其实算是各大公司、组织，甚至是个人的“产品”。**其很大一部分目的在于宣传、推广和传达理念、思想等，更合适的叫法应该是：XX 产品 Campaign、XX 产品宣传落地页、XX 宣传文案……\n\n>而这些 Bling Bling 的页面，除了依赖 HTML5 这门标记语言，还至少需要 `CSS3` 和 `JavaScript` 来实现动画效果和交互效果。\n\n>**所以说，“H5”是一类集合了至少三种技术的宣传推广文案，或市场营销部（运营人员）为传达某种理念和思想而做的 Campaign 方案。**\n\n#### 为什么要扯 HTML5？\n\n主要是想为不懂前端的童鞋们，消除几个疑惑：\n\n1. 不要以为 HTML5 是很新鲜的东西，一点都不新鲜了。恰巧是微信朋友圈的强传播属性，导致所谓“H5”火了之后，HTML5 这种形式的宣传页知名度大了而已，谓之“普及了”；\n2. 现在的网页、网站几乎都是基于 HTML5 开发的了（部分无良技术外包除外）；\n3. 有些网站在电脑上打开的“外观”与在移动设备上打开的“外观”不一样，那是因为借助了 HTML5+CSS3+JavaScript，针对不同设备进行了不一样的展示，本质上还是同一个网站。当然，像百度这样的大公司，某些对设备很敏感的服务，确实存在多个不同的版本。例如“百度地图”网页版，至少有 PC 版和移动版两个版本，分别是不同的网站。只是针对不同的设备，加载不同版本的网站，其背后的数据其实是一致的。\n4. HTML5 和 CSS3 的出现，使得开发一个能同时适配 PC 和移动设备的网站变得更加便利。这为网站跨平台提供了基础，而且跨平台后的网站可用性和易用性得到了保障。\n\n文章开头的温馨提示里就提到，平行空间官网能针对不同的设备宽度，展现不一样的样式。你猜对了，平行空间官网确实使用了 HTML5 和 CSS3。==**然而，这不是今天的重点。**==\n\n#### 重点来了：官网技术栈\n\n>**平行空间官网源码已在 Github 开源，[戳我快速进入>>](https://github.com/Loyalsoldier/ParallelSpace-Website)**\n\n- HTML5、Bootstrap Grid System（网格布局系统）、LESS、jQuery；\n- 基于 Gulp 构建工具的 Workflow：微信朋友圈广告工作流 [WxMoment-Workflow](https://github.com/wxc-team/WxMoment-Workflow)（由微信团队维护的开源项目）；\n- **中文字体子集化方案：[Font-Spider](http://font-spider.org) 的 Gulp 插件 [gulp-font-spider](https://github.com/aui/gulp-font-spider)**\n\n尽管 `WxMoment-Workflow` 在整个项目的开发过程中，扮演着极其重要的角色（当然，也因为最近 `Node.js` 社区大跃进式的版本升级，导致 WxMoment-Workflow 这个拥有诸多插件依赖的工作流变得可用性极其低，很多时候能否成功安装完全靠运气）。但是，今天的主角却是 **`Font-Spider`**。\n\n#### 藏好主角，先来聊聊中文字体\n\n##### 中文字体界之殇\n\n一个网站要传达信息，除了文字、图片、语音、视频等几种媒介外，就目前而言，并没有太多其他的方式方法。而文字作为其中最基础也是运用最多的一类媒介，如何让其表现得更美观和优雅，更适合长时间阅读，无论是字体界，还是网页重构圈以及前端开发圈，都做了很多努力和尝试。\n\n先是，中文字体界慢慢地出现了越来越多针对电子显示屏进行优化的中文字体，例如 Adobe 和 Google 共同设计并开源的**`思源黑体`**，以及柯熾堅老师三年磨一剑的**`信黑体`**，还有苹果去年推出的在自家全系列产品里都用上了的**`苹方`**……\n\n平面设计师都知道，中文字体界是多么缺乏优秀的中文字体，以致于设计稿中经常只会出现那么一两种无衬线体，无非就是微软雅黑、方正系列、造字工房系列……\n\n>**问：**为何中文字体界缺优秀字体？是中国缺字体设计师？国外情况如何？\n<br />\n>**答：**原因主要有两个。\n\n>1. 优秀的字体设计师确实少；\n\n>2. 源远流长的中华文化积攒下来的`中文字型`太多了！基本字型就有几千个，良心字体设计师还需要设计常用字以外的生僻字，多则上万，最多两万+。而英文字体，只需要设计 26 个英文字母+有限的标点符号，自然简单快捷多了。\n\n>**意思就是：**一套合格的中文字体，必须要设计几千个常用字字型和标点符号。良心字体设计师为了满足一些用户的生僻字使用需求，还需要设计生僻字的字型。其复杂程度，非英文字体所能企及。**工作量大的同时，中文字体字型还比英文字母字型复杂得多，还需要各种各样的设计思考与讲究。**\n\n##### 中文字体于网页使用之殇\n\n中文字体设计，除了工作量大、字型复杂、考究设计功力外，还有一个巨大的 bug，也是“得益于”字型太多：**设计出来的字体文件相当巨大！**\n\n动辄大于 2M 的字体文件，若像英文字体一样应用于网页中，是极其浪费流量且影响网站加载速度的行为。因此，绝大部分中文网站，都使用浏览器默认字体来展示自己网页内的文字内容，并没有针对性地进行中文字体的选择和优化。\n\n**然而，浏览器默认字体设置，取决于用户自己的电脑内安装了什么字体+浏览器设置了什么字体。**例如，自从 Windows Vista 操作系统起，微软默认使用**`微软雅黑`**作为系统字体，而大部分浏览器，却默认使用**`宋体`**（中易宋体）作为默认字体，导致了本来网站能用微软雅黑来显示，却偏偏被浏览器给“宋体”了。\n\n**还有另一种情况是：**网站设置了使用的字体，而电脑内并没有安装该字体，导致显示效果不佳。例如 Windows XP 并没有自带**`微软雅黑`**字体，而很多网站默认使用微软雅黑作为网站无衬线体的默认字体，导致 XP 用户自动降级使用 XP 内默认的 **`Arial`** 字体来显示无衬线字体。\n\n##### 上有政策，下有对策\n\n针对上面第二种情况，聪明的 `W3C` 给出了一个标准，并将其添加到了 `CSS3` 中：**`@font-face`**。\n\n**@font-face 的作用简单来说就是：**允许网页重构师、前端开发工程师在网页内嵌入并使用网络上的字体，而不仅仅局限于只能使用自己电脑内的字体。\n\n**这意味着：**如果一个网站想要使用一种特别而又不常见的字体，并且希望网站在所有用户的电子设备中都展示一样的文字效果，那么，只需要借助 CSS3 的 @font-face 定义好需要使用的字体在网络中的地址即可。这个地址，既可以是第三方字体服务提供商提供的地址，也可以是自己服务器中的字体文件的地址。\n\n**从而实现了：用户的设备无需安装该字体，只需要网页加载完毕，网站即可使用该字体来显示文字内容的初衷。**\n\n>有了这项标准，中文字体在网页中“**`能不能`**”使用的问题解决了，而“**`好不好`**”使用的问题，谁来解决？\n\n#### 主角登场：中文字体子集化方案\n\n前文说到，中文字体普遍文件体积很大，那么有什么方法可以让字体文件体积变小吗？真心有！那就是：**`中文字体子集化方案`**。\n\n顾名思义，`子集`就是从`父集`或者`全集`中攫取的部分元素再次组合而成的集合。这是数学上的概念。而**中文字体子集化方案**，意思就是：从文件体积大的中文字体中，攫取出需要使用的部分字型，再合成为一个新的、文件体积相对比较小的字体文件的方案，或者是把没有使用过的字型从字体文件中剔除，从而形成文件体积相对较小的字体文件的方案。\n\n>**据我所知，目前国内中文字体子集化方案有两个：一是由`百度 FEX 前端研发部`开发并开源的 [`Fontmin`](http://ecomfe.github.io/fontmin)，二是基于 Fontmin 二次开发并开源的 [`Font-Spider`](http://font-spider.org)。**\n\n两者都是基于 Node.js 平台的纯 JavaScript 解决方案，使用方法都很简单，请参照各自官网。然而，在我的试用过程中，也发现了一些缺点：\n\n1. **支持格式不够广泛。**目前只支持 `.ttf` 文件格式，对于常用的 `.otf` 格式反倒不支持，这给**找字体文件**提出了很高的要求，甚至有时候可能需要去购买字体才能拿到某些商用字体的 .ttf 格式文件；\n2. **子集化后的字体文件体积也相当可观。**平行空间官网单个页面里，大约有 800 个字型，子集化后的字体文件大小约为 90KB（其中 `.svg` 格式文件达到 240+KB），相当于一张高分辨率图片的体积。这对于访问量大的网站而已，也是一笔不小的流量费开销；\n3. **只适用于静态页面。**虽说两个方案都依靠在 Node.js 社区，能实现无缝跨平台。可是对于大型网站、动态网站这类字型无比多、内容需要动态生成的网站而言，中文字体子集化方案显得毫无必要、相当无奈：\n - **毫无必要：**可以剔除的字型很少——因为网站大，内容多，自然字型需求也多；\n - **相当无奈：**动态网站的内容都是服务器实时生成的（即使不是实时，也是有时间要求的，不能拖延，只能提前），也自然要求子集化字体文件能实时生成。可是，从我的使用中得知，一个字体文件要进行子集化运算，是相当耗时的。当时，每次用 `Gulp` 构建子集化字体时，都需要 30 秒时间。这么长的耗时，对用户而言是无法接受的。对网站运营者而言，实时生成子集化字体是相当耗费服务器处理能力的。\n\n>**问：**鉴于中文字体子集化方案还有这么多缺点，那么目前业内普遍是怎么做的呢？\n<br />\n>**答：**首先，没有什么“业内怎么做”的说法，因为业内这么做的，屈指可数……\n\n>中文字体 @font-face 使用先驱（不是先烈）——**苹果官网**，使用的是一个 0.97MB 大小的 **`PingHei-Light`** 字体。应该是一个特别定制版本，去掉了生僻字，只留下基本字型中的基本字型。\n\n>而国内官网做得也不错的锤子科技官网，我记得在坚果手机发布之前，使用的好像是方正悠黑字体；刚刚想再去确认一遍，发现已经沦落到要么使用图片代替字体，要么使用微软雅黑的地步了。\n\n>**所以说，对于访问量巨大的网站而言，在网页中使用优秀的中文字体，也是极其需要勇气的决定！**\n\n### 官网的开发细节\n\n单页静态页面，无论是布局，还是代码都相当简单，也没有复杂功能。然而，最耗时的依然是不同设备间的适配工作。\n\n**平行空间官网充分调动了我的完美主义主观能动性**——是的，官网适配了除了 `Apple Watch` 外的所有苹果设备，还有主流手机、平板、PC，以及部分 Linux 系统也有中文字体的优化；针对每款 `Retina` 设备都准备了 `@2x` 二倍图。\n\n**为此，专门总结了一份分辨率查询表以作备忘：**\n\n<table>\n<thead>\n<tr>\n  <th align=\"center\">设备类型</th>\n  <th align=\"center\">Bootstrap 响应点</th>\n</tr>\n</thead>\n<tbody><tr>\n  <td align=\"center\">Phone 手机</td>\n  <td align=\"center\">&lt;768px</td>\n</tr>\n<tr>\n  <td align=\"center\">Tablet 平板</td>\n  <td align=\"center\">768px~992px</td>\n</tr>\n<tr>\n  <td align=\"center\">Computer 普通电脑</td>\n  <td align=\"center\">992px~1200px</td>\n</tr>\n<tr>\n  <td align=\"center\">Large Screen 大屏电脑</td>\n  <td align=\"center\">&gt;1200px</td>\n</tr>\n</tbody>\n</table>\n\n<table>\n<thead>\n<tr>\n  <th align=\"center\">机型</th>\n  <th align=\"center\">屏幕尺寸</th>\n  <th align=\"center\">CSS Pixel</th>\n  <th align=\"center\">是否 Retina</th>\n</tr>\n</thead>\n<tbody><tr>\n  <td align=\"center\">iPhone 4/4s</td>\n  <td align=\"center\">3.5</td>\n  <td align=\"center\">320x480</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">iPhone 5/5s/5c</td>\n  <td align=\"center\">4</td>\n  <td align=\"center\">320x568</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">iPhone 6/6s</td>\n  <td align=\"center\">4.7</td>\n  <td align=\"center\">375x627</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">iPhone 6 Plus/6s Plus</td>\n  <td align=\"center\">5.5</td>\n  <td align=\"center\">414x736</td>\n  <td align=\"center\">@3x</td>\n</tr>\n<tr>\n  <td align=\"center\">MacBook Air</td>\n  <td align=\"center\">11</td>\n  <td align=\"center\">1366x768</td>\n  <td align=\"center\">No</td>\n</tr>\n<tr>\n  <td align=\"center\">MacBook Air</td>\n  <td align=\"center\">13</td>\n  <td align=\"center\">1440x900</td>\n  <td align=\"center\">No</td>\n</tr>\n<tr>\n  <td align=\"center\">MacBook Pro</td>\n  <td align=\"center\">13</td>\n  <td align=\"center\">1280x800</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">MacBook Pro</td>\n  <td align=\"center\">15</td>\n  <td align=\"center\">1440x900</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">MacBook</td>\n  <td align=\"center\">12</td>\n  <td align=\"center\">1152x720</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">iMac</td>\n  <td align=\"center\">21.5</td>\n  <td align=\"center\">1920x1080</td>\n  <td align=\"center\">No</td>\n</tr>\n<tr>\n  <td align=\"center\">iMac</td>\n  <td align=\"center\">27</td>\n  <td align=\"center\">2560x1440</td>\n  <td align=\"center\">No</td>\n</tr>\n<tr>\n  <td align=\"center\">iMac 4K</td>\n  <td align=\"center\">21.5</td>\n  <td align=\"center\">2048x1152</td>\n  <td align=\"center\">@2x</td>\n</tr>\n<tr>\n  <td align=\"center\">iMac 5K</td>\n  <td align=\"center\">27</td>\n  <td align=\"center\">2560x1440</td>\n  <td align=\"center\">@2x</td>\n</tr>\n</tbody>\n</table>\n\n**由此可见，Bootstrap 并不能很好地对 iMac 系列一体机进行完美适配，因为 1200px 的响应点无论是距离 1920px 还是 2560px，都有点远。**为此，需要人工对照 iMac 几款机型分辨率和是否为 Retina 屏幕，一一设置媒体查询（Media Query），增加针对 iMac 的响应点。\n\n```CSS\n// 针对 iMac 21 寸，需要 1920px 宽度的背景图片\n@media only screen and ( min-width: 1920px )\n\n// 针对 iMac 27 寸，需要 2560px 宽度的背景图片\n@media only screen and ( min-width: 2560px )\n\n// 针对 iMac 4K，需要 4096px 宽度的背景图片，与下面比较接近，可取中间值，保留一份即可\n@media only screen and ( min-width: 2048px ) and ( min-resolution: 2dppx ),\n@media only screen and ( min-width: 2048px ) and ( min-device-pixel-ratio: 2 )\n\n// 针对 iMac 5K，需要 5120px 宽度的背景图片，与上面比较接近，可取中间值，保留一份即可\n@media only screen and ( min-width: 2560px ) and ( min-resolution: 2dppx ),\n@media only screen and ( min-width: 2560px ) and ( min-device-pixel-ratio: 2 )\n```\n\n\n#### 全平台兼容的 @font-family\n\nOS X El Capitan 的发布，带来了苹果新一代字体：中文字体的**`苹方`**、西文字体的**`San Francisco`**。**那么，能兼容目前所有平台的网页字体是如何设置的呢？**\n\n这里提供一个方案：\n\n```CSS\nhtml, body {\n    font-family: \"San Francisco\", \"Helvetica Neue\", \"Lucida Grande\", \"Segoe UI\", \"PingFang SC\", \"Hiragino Sans GB\", \"Heiti SC\", \"WenQuanYi Microhei\", \"Microsoft Yahei\", Arial, sans-serif;\n}\n```\n\n**稍微解释一下：**\n>`San Francisco` 放首位，用于检测操作系统是否为最新的 `El Capitan`，否则退而求其次，使用`Helvetica Neue`（苹果设备目前就这两种默认西文字体）。`Lucida Grande` 主要用于适配 `Ubuntu` 系统的西文字体，Windows 系统并不自带此字体，所以并不会 fallback 到 Windows 上来。`Segoe UI` 是自 Windows Vista 操作系统以来的默认 Windows 西文字体。\n<br />\n>接着到中文字体部分：`PingFang SC` 放首位，依然为了适配苹果设备，否则退而求其次，使用`Hiragino Sans GB`（冬青黑体。之前 OS X 默认中文字体）；`Heiti SC` 主要是为了适配 iOS9 之前版本的 iOS 系统机型。`WenQuanYi Microhei`（文泉驿微黑） 是某些 Linux 系列操作系统的默认中文字体。`Microsoft Yahei` 是自 Windows Vista 以来 Windows 默认中文字体。最后的 `Arial` 和 `sans-serif` 是最后一道 fallback，用于 Windows XP 以及完全没有以上中文字体的操作系统使用。\n<br />\n>**如果在项目中使用了字体子集化方案，可以在`微软雅黑`之前放入自定义字体。**对于苹果系统，建议保持其系统默认字体设置，不强制使用自定义字体；对于 Windows、android，建议能使用自定义字体即使用。\n\n## 共同进步\n\n若有错误之处，欢迎指出，我们共同进步！","html":"<h2 id=\"\">关于我们</h2>\n\n<p>如果你不了解<code>平行空间</code>，建议先看看我们的团队官网：<a href=\"http://www.parallelspace.cn\">www.parallelspace.cn</a></p>\n\n<blockquote>\n  <p><strong>温馨提示</strong>：用不同屏幕宽度的设备浏览页面，会有不一样的显示效果喔~</p>\n</blockquote>\n\n<h2 id=\"\">官网效果展示</h2>\n\n<p><strong>iPhone 上的效果：</strong></p>\n\n<p><img src=\"/content/images/2015/11/iPhone-Preview.png\" alt=\"iPhone 效果展示\" /></p>\n\n<p><strong>iPad 上的效果：</strong></p>\n\n<p><img src=\"/content/images/2015/11/iPad-Preview.png\" alt=\"iPad 效果展示\" /></p>\n\n<p><strong>普通桌面电脑上的效果：</strong></p>\n\n<p><img src=\"/content/images/2015/11/Desktop-Preview.png\" alt=\"普通桌面电脑效果展示\" /></p>\n\n<p><strong>大屏桌面电脑上的效果：</strong></p>\n\n<p><img src=\"/content/images/2015/11/LargeScreen-Preview.png\" alt=\"大屏桌面电脑效果展示\" /></p>\n\n<h3 id=\"mindstore\">官网登上爱范儿 MindStore</h3>\n\n<p>官网上线后，我试着给爱范儿 MindStore 提交“产品”，没想到第二天团队官网就出现在了 MindStore 首页，排在第三位，仅次于秀米和智能婴儿车。详情戳这里：<a href=\"http://mindstore.io/mind/6776\">Parallel Space on MindStore</a></p>\n\n<blockquote>\n  <p><strong>一支无名团队凭借一个单页静态官网，登上了 MindStore，我个人觉得是官网的颜值打动了负责审核的工作人员了。</strong></p>\n</blockquote>\n\n<p><strong>当时的截图：</strong></p>\n\n<p><img src=\"/content/images/2015/11/ParallelSpace-on-MindStore.png\" alt=\"平行空间登上 MindStore\" /></p>\n\n<h2 id=\"timeline\">Timeline 回顾</h2>\n\n<p>本来这篇博文应该纯粹记录官网上线历程的，但是发现团队成立后并没有做过大事记，遂一并记录吧：</p>\n\n<ul>\n<li>2015 年 5 月，平行空间团队成立。那会儿频繁的会议，密集的工作安排，压得人有点喘不过气来。期间，平行空间招新工作顺利完成，团队注入新鲜血液；制定了 2015 下半年计划；</li>\n<li>2015 年 6 月，零零散散的一些技术研发和维护工作，以及团队整顿工作；</li>\n<li>2015 年 7 月上旬，学期末，以团队名义第一次参加比赛——“第二届‘恺炬杯’惠州创新创业大赛暨首届仲恺高新区 APP 设计大赛”（参赛经历有限，优秀奖，但也确实总结了些经验教训）；</li>\n<li>2015 年 7 月中下旬，暑假在家，各有各的事儿；</li>\n<li>2015 年 8 月，按计划提前一个月回校，协同工作；</li>\n<li>2015 年 9 月，开学推广活动，转化效果正常；</li>\n<li>2015 年 10 月，由于上课、实习等种种原因，部分产品开发周期被迫延长……但官网于 11 日如期上线；中下旬比较平静，主要是团队内部建设；</li>\n<li>2015 年 11 月上旬，也就是这三天，光棍节“派 TT”活动，效果很棒！</li>\n</ul>\n\n<h2 id=\"\">进入正题：技术理解+官网上线</h2>\n\n<h3 id=\"\">计划 ≠ 实际？</h3>\n\n<p>从 5 月份制定计划，7 月份暑假在家真正开始着手这件事儿，到 10 月 11 日正式上线。这时间跨度足足有 3 个月。然而，正如你所看到的一样，官网只有一个页面。对，还是一个静态页面。<strong>可能有人想吐槽了：这么简单的东西我半天就可以搞定！你居然花了 3 个月？而且，这东西谈何技术栈！</strong></p>\n\n<p>且慢，请允许我娓娓道来……</p>\n\n<h3 id=\"\">真相只有一个</h3>\n\n<blockquote>\n  <p><strong>事情是这样的：</strong>真正做这个官网页面，我花了两天用于设计、两天空闲时间用于编码（由于完美主义情节和强迫症，也确实是稍微慢了一点点）。而其余时间，都在升级对前端的认知，学习前端知识，筛选工具，做技术选型的工作。</p>\n</blockquote>\n\n<p><strong>对前端稍微了解的小伙伴都应该知道：</strong>一个简单的前端项目，既可以用最简单的原生方法进行开发和维护，又可以用复杂的工程化手段进行开发+优化+维护，甚至可以针对目前的主流设备，做到页内图片、页面排版 1:1 近乎完美还原……</p>\n\n<p>那么，对于一个完美主义者和报废设计师，如何平衡项目开发周期和项目还原度，变得尤为难以抉择。然而，从严格意义上看，这是我第一个“<mark>对外可见</mark>”的项目（以前的项目都是微信公众号内 Webview 小功能页面）。<strong>所以这一次，我决定发挥我的完美主义主观能动性 O(∩_∩)O哈哈~</strong></p>\n\n<h3 id=\"\">不谈设计</h3>\n\n<p>虽然官网颜值确实很高，但是今天我不打算谈论这个。</p>\n\n<h3 id=\"\">只谈技术与理解</h3>\n\n<h4 id=\"h5\">说说什么是“H5”</h4>\n\n<p>“H5”这个说法其实相当的“蛋疼”。依稀记得，我是在刘健亮的微信公众号上看到这个说法。当时还迟疑了下，“H5”是什么鬼……后来才知道，“微信运营们”把在微信朋友圈里传播的那种酷炫、能滑动的 Bling Bling 的页面集合叫“H5”。</p>\n\n<blockquote>\n  <p><strong>HTML5 表示受到了一万点伤害……</strong></p>\n</blockquote>\n\n<p><strong>按照我的个人理解简单解释一下：</strong></p>\n\n<blockquote>\n  <p><strong><code>HTML</code> 是 <code>W3C</code> 定义的一种用于组织网页结构和内容的超文本标记语言。</strong><code>HTML5</code> 是 HTML 的第五个版本，新增了很多新特性，为构建适合移动设备的网页、网站等提供了标准上的支持。</p>\n  \n  <p><strong>而所谓的“H5”其实算是各大公司、组织，甚至是个人的“产品”。</strong>其很大一部分目的在于宣传、推广和传达理念、思想等，更合适的叫法应该是：XX 产品 Campaign、XX 产品宣传落地页、XX 宣传文案……</p>\n  \n  <p>而这些 Bling Bling 的页面，除了依赖 HTML5 这门标记语言，还至少需要 <code>CSS3</code> 和 <code>JavaScript</code> 来实现动画效果和交互效果。</p>\n  \n  <p><strong>所以说，“H5”是一类集合了至少三种技术的宣传推广文案，或市场营销部（运营人员）为传达某种理念和思想而做的 Campaign 方案。</strong></p>\n</blockquote>\n\n<h4 id=\"html5\">为什么要扯 HTML5？</h4>\n\n<p>主要是想为不懂前端的童鞋们，消除几个疑惑：</p>\n\n<ol>\n<li>不要以为 HTML5 是很新鲜的东西，一点都不新鲜了。恰巧是微信朋友圈的强传播属性，导致所谓“H5”火了之后，HTML5 这种形式的宣传页知名度大了而已，谓之“普及了”；  </li>\n<li>现在的网页、网站几乎都是基于 HTML5 开发的了（部分无良技术外包除外）；  </li>\n<li>有些网站在电脑上打开的“外观”与在移动设备上打开的“外观”不一样，那是因为借助了 HTML5+CSS3+JavaScript，针对不同设备进行了不一样的展示，本质上还是同一个网站。当然，像百度这样的大公司，某些对设备很敏感的服务，确实存在多个不同的版本。例如“百度地图”网页版，至少有 PC 版和移动版两个版本，分别是不同的网站。只是针对不同的设备，加载不同版本的网站，其背后的数据其实是一致的。  </li>\n<li>HTML5 和 CSS3 的出现，使得开发一个能同时适配 PC 和移动设备的网站变得更加便利。这为网站跨平台提供了基础，而且跨平台后的网站可用性和易用性得到了保障。</li>\n</ol>\n\n<p>文章开头的温馨提示里就提到，平行空间官网能针对不同的设备宽度，展现不一样的样式。你猜对了，平行空间官网确实使用了 HTML5 和 CSS3。<mark><strong>然而，这不是今天的重点。</strong></mark></p>\n\n<h4 id=\"\">重点来了：官网技术栈</h4>\n\n<blockquote>\n  <p><strong>平行空间官网源码已在 Github 开源，<a href=\"https://github.com/Loyalsoldier/ParallelSpace-Website\">戳我快速进入>></a></strong></p>\n</blockquote>\n\n<ul>\n<li>HTML5、Bootstrap Grid System（网格布局系统）、LESS、jQuery；</li>\n<li>基于 Gulp 构建工具的 Workflow：微信朋友圈广告工作流 <a href=\"https://github.com/wxc-team/WxMoment-Workflow\">WxMoment-Workflow</a>（由微信团队维护的开源项目）；</li>\n<li><strong>中文字体子集化方案：<a href=\"http://font-spider.org\">Font-Spider</a> 的 Gulp 插件 <a href=\"https://github.com/aui/gulp-font-spider\">gulp-font-spider</a></strong></li>\n</ul>\n\n<p>尽管 <code>WxMoment-Workflow</code> 在整个项目的开发过程中，扮演着极其重要的角色（当然，也因为最近 <code>Node.js</code> 社区大跃进式的版本升级，导致 WxMoment-Workflow 这个拥有诸多插件依赖的工作流变得可用性极其低，很多时候能否成功安装完全靠运气）。但是，今天的主角却是 <strong><code>Font-Spider</code></strong>。</p>\n\n<h4 id=\"\">藏好主角，先来聊聊中文字体</h4>\n\n<h5 id=\"\">中文字体界之殇</h5>\n\n<p>一个网站要传达信息，除了文字、图片、语音、视频等几种媒介外，就目前而言，并没有太多其他的方式方法。而文字作为其中最基础也是运用最多的一类媒介，如何让其表现得更美观和优雅，更适合长时间阅读，无论是字体界，还是网页重构圈以及前端开发圈，都做了很多努力和尝试。</p>\n\n<p>先是，中文字体界慢慢地出现了越来越多针对电子显示屏进行优化的中文字体，例如 Adobe 和 Google 共同设计并开源的<strong><code>思源黑体</code></strong>，以及柯熾堅老师三年磨一剑的<strong><code>信黑体</code></strong>，还有苹果去年推出的在自家全系列产品里都用上了的<strong><code>苹方</code></strong>……</p>\n\n<p>平面设计师都知道，中文字体界是多么缺乏优秀的中文字体，以致于设计稿中经常只会出现那么一两种无衬线体，无非就是微软雅黑、方正系列、造字工房系列……</p>\n\n<blockquote>\n  <p><strong>问：</strong>为何中文字体界缺优秀字体？是中国缺字体设计师？国外情况如何？\n  <br /> <br />\n  <strong>答：</strong>原因主要有两个。</p>\n  \n  <ol>\n  <li><p>优秀的字体设计师确实少；</p></li>\n  <li><p>源远流长的中华文化积攒下来的<code>中文字型</code>太多了！基本字型就有几千个，良心字体设计师还需要设计常用字以外的生僻字，多则上万，最多两万+。而英文字体，只需要设计 26 个英文字母+有限的标点符号，自然简单快捷多了。</p></li>\n  </ol>\n  \n  <p><strong>意思就是：</strong>一套合格的中文字体，必须要设计几千个常用字字型和标点符号。良心字体设计师为了满足一些用户的生僻字使用需求，还需要设计生僻字的字型。其复杂程度，非英文字体所能企及。<strong>工作量大的同时，中文字体字型还比英文字母字型复杂得多，还需要各种各样的设计思考与讲究。</strong></p>\n</blockquote>\n\n<h5 id=\"\">中文字体于网页使用之殇</h5>\n\n<p>中文字体设计，除了工作量大、字型复杂、考究设计功力外，还有一个巨大的 bug，也是“得益于”字型太多：<strong>设计出来的字体文件相当巨大！</strong></p>\n\n<p>动辄大于 2M 的字体文件，若像英文字体一样应用于网页中，是极其浪费流量且影响网站加载速度的行为。因此，绝大部分中文网站，都使用浏览器默认字体来展示自己网页内的文字内容，并没有针对性地进行中文字体的选择和优化。</p>\n\n<p><strong>然而，浏览器默认字体设置，取决于用户自己的电脑内安装了什么字体+浏览器设置了什么字体。</strong>例如，自从 Windows Vista 操作系统起，微软默认使用<strong><code>微软雅黑</code></strong>作为系统字体，而大部分浏览器，却默认使用<strong><code>宋体</code></strong>（中易宋体）作为默认字体，导致了本来网站能用微软雅黑来显示，却偏偏被浏览器给“宋体”了。</p>\n\n<p><strong>还有另一种情况是：</strong>网站设置了使用的字体，而电脑内并没有安装该字体，导致显示效果不佳。例如 Windows XP 并没有自带<strong><code>微软雅黑</code></strong>字体，而很多网站默认使用微软雅黑作为网站无衬线体的默认字体，导致 XP 用户自动降级使用 XP 内默认的 <strong><code>Arial</code></strong> 字体来显示无衬线字体。</p>\n\n<h5 id=\"\">上有政策，下有对策</h5>\n\n<p>针对上面第二种情况，聪明的 <code>W3C</code> 给出了一个标准，并将其添加到了 <code>CSS3</code> 中：<strong><code>@font-face</code></strong>。</p>\n\n<p><strong>@font-face 的作用简单来说就是：</strong>允许网页重构师、前端开发工程师在网页内嵌入并使用网络上的字体，而不仅仅局限于只能使用自己电脑内的字体。</p>\n\n<p><strong>这意味着：</strong>如果一个网站想要使用一种特别而又不常见的字体，并且希望网站在所有用户的电子设备中都展示一样的文字效果，那么，只需要借助 CSS3 的 @font-face 定义好需要使用的字体在网络中的地址即可。这个地址，既可以是第三方字体服务提供商提供的地址，也可以是自己服务器中的字体文件的地址。</p>\n\n<p><strong>从而实现了：用户的设备无需安装该字体，只需要网页加载完毕，网站即可使用该字体来显示文字内容的初衷。</strong></p>\n\n<blockquote>\n  <p>有了这项标准，中文字体在网页中“<strong><code>能不能</code></strong>”使用的问题解决了，而“<strong><code>好不好</code></strong>”使用的问题，谁来解决？</p>\n</blockquote>\n\n<h4 id=\"\">主角登场：中文字体子集化方案</h4>\n\n<p>前文说到，中文字体普遍文件体积很大，那么有什么方法可以让字体文件体积变小吗？真心有！那就是：<strong><code>中文字体子集化方案</code></strong>。</p>\n\n<p>顾名思义，<code>子集</code>就是从<code>父集</code>或者<code>全集</code>中攫取的部分元素再次组合而成的集合。这是数学上的概念。而<strong>中文字体子集化方案</strong>，意思就是：从文件体积大的中文字体中，攫取出需要使用的部分字型，再合成为一个新的、文件体积相对比较小的字体文件的方案，或者是把没有使用过的字型从字体文件中剔除，从而形成文件体积相对较小的字体文件的方案。</p>\n\n<blockquote>\n  <p><strong>据我所知，目前国内中文字体子集化方案有两个：一是由<code>百度 FEX 前端研发部</code>开发并开源的 <a href=\"http://ecomfe.github.io/fontmin\"><code>Fontmin</code></a>，二是基于 Fontmin 二次开发并开源的 <a href=\"http://font-spider.org\"><code>Font-Spider</code></a>。</strong></p>\n</blockquote>\n\n<p>两者都是基于 Node.js 平台的纯 JavaScript 解决方案，使用方法都很简单，请参照各自官网。然而，在我的试用过程中，也发现了一些缺点：</p>\n\n<ol>\n<li><strong>支持格式不够广泛。</strong>目前只支持 <code>.ttf</code> 文件格式，对于常用的 <code>.otf</code> 格式反倒不支持，这给<strong>找字体文件</strong>提出了很高的要求，甚至有时候可能需要去购买字体才能拿到某些商用字体的 .ttf 格式文件；  </li>\n<li><strong>子集化后的字体文件体积也相当可观。</strong>平行空间官网单个页面里，大约有 800 个字型，子集化后的字体文件大小约为 90KB（其中 <code>.svg</code> 格式文件达到 240+KB），相当于一张高分辨率图片的体积。这对于访问量大的网站而已，也是一笔不小的流量费开销；  </li>\n<li><strong>只适用于静态页面。</strong>虽说两个方案都依靠在 Node.js 社区，能实现无缝跨平台。可是对于大型网站、动态网站这类字型无比多、内容需要动态生成的网站而言，中文字体子集化方案显得毫无必要、相当无奈： <br />\n<ul><li><strong>毫无必要：</strong>可以剔除的字型很少——因为网站大，内容多，自然字型需求也多；</li>\n<li><strong>相当无奈：</strong>动态网站的内容都是服务器实时生成的（即使不是实时，也是有时间要求的，不能拖延，只能提前），也自然要求子集化字体文件能实时生成。可是，从我的使用中得知，一个字体文件要进行子集化运算，是相当耗时的。当时，每次用 <code>Gulp</code> 构建子集化字体时，都需要 30 秒时间。这么长的耗时，对用户而言是无法接受的。对网站运营者而言，实时生成子集化字体是相当耗费服务器处理能力的。</li></ul></li>\n</ol>\n\n<blockquote>\n  <p><strong>问：</strong>鉴于中文字体子集化方案还有这么多缺点，那么目前业内普遍是怎么做的呢？\n  <br /> <br />\n  <strong>答：</strong>首先，没有什么“业内怎么做”的说法，因为业内这么做的，屈指可数……</p>\n  \n  <p>中文字体 @font-face 使用先驱（不是先烈）——<strong>苹果官网</strong>，使用的是一个 0.97MB 大小的 <strong><code>PingHei-Light</code></strong> 字体。应该是一个特别定制版本，去掉了生僻字，只留下基本字型中的基本字型。</p>\n  \n  <p>而国内官网做得也不错的锤子科技官网，我记得在坚果手机发布之前，使用的好像是方正悠黑字体；刚刚想再去确认一遍，发现已经沦落到要么使用图片代替字体，要么使用微软雅黑的地步了。</p>\n  \n  <p><strong>所以说，对于访问量巨大的网站而言，在网页中使用优秀的中文字体，也是极其需要勇气的决定！</strong></p>\n</blockquote>\n\n<h3 id=\"\">官网的开发细节</h3>\n\n<p>单页静态页面，无论是布局，还是代码都相当简单，也没有复杂功能。然而，最耗时的依然是不同设备间的适配工作。</p>\n\n<p><strong>平行空间官网充分调动了我的完美主义主观能动性</strong>——是的，官网适配了除了 <code>Apple Watch</code> 外的所有苹果设备，还有主流手机、平板、PC，以及部分 Linux 系统也有中文字体的优化；针对每款 <code>Retina</code> 设备都准备了 <code>@2x</code> 二倍图。</p>\n\n<p><strong>为此，专门总结了一份分辨率查询表以作备忘：</strong></p>\n\n<table>  \n<thead>  \n<tr>  \n  <th align=\"center\">设备类型</th>\n  <th align=\"center\">Bootstrap 响应点</th>\n</tr>  \n</thead>  \n<tbody><tr>  \n  <td align=\"center\">Phone 手机</td>\n  <td align=\"center\">&lt;768px</td>\n</tr>  \n<tr>  \n  <td align=\"center\">Tablet 平板</td>\n  <td align=\"center\">768px~992px</td>\n</tr>  \n<tr>  \n  <td align=\"center\">Computer 普通电脑</td>\n  <td align=\"center\">992px~1200px</td>\n</tr>  \n<tr>  \n  <td align=\"center\">Large Screen 大屏电脑</td>\n  <td align=\"center\">&gt;1200px</td>\n</tr>  \n</tbody>  \n</table>\n\n<table>  \n<thead>  \n<tr>  \n  <th align=\"center\">机型</th>\n  <th align=\"center\">屏幕尺寸</th>\n  <th align=\"center\">CSS Pixel</th>\n  <th align=\"center\">是否 Retina</th>\n</tr>  \n</thead>  \n<tbody><tr>  \n  <td align=\"center\">iPhone 4/4s</td>\n  <td align=\"center\">3.5</td>\n  <td align=\"center\">320x480</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iPhone 5/5s/5c</td>\n  <td align=\"center\">4</td>\n  <td align=\"center\">320x568</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iPhone 6/6s</td>\n  <td align=\"center\">4.7</td>\n  <td align=\"center\">375x627</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iPhone 6 Plus/6s Plus</td>\n  <td align=\"center\">5.5</td>\n  <td align=\"center\">414x736</td>\n  <td align=\"center\">@3x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">MacBook Air</td>\n  <td align=\"center\">11</td>\n  <td align=\"center\">1366x768</td>\n  <td align=\"center\">No</td>\n</tr>  \n<tr>  \n  <td align=\"center\">MacBook Air</td>\n  <td align=\"center\">13</td>\n  <td align=\"center\">1440x900</td>\n  <td align=\"center\">No</td>\n</tr>  \n<tr>  \n  <td align=\"center\">MacBook Pro</td>\n  <td align=\"center\">13</td>\n  <td align=\"center\">1280x800</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">MacBook Pro</td>\n  <td align=\"center\">15</td>\n  <td align=\"center\">1440x900</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">MacBook</td>\n  <td align=\"center\">12</td>\n  <td align=\"center\">1152x720</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iMac</td>\n  <td align=\"center\">21.5</td>\n  <td align=\"center\">1920x1080</td>\n  <td align=\"center\">No</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iMac</td>\n  <td align=\"center\">27</td>\n  <td align=\"center\">2560x1440</td>\n  <td align=\"center\">No</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iMac 4K</td>\n  <td align=\"center\">21.5</td>\n  <td align=\"center\">2048x1152</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n<tr>  \n  <td align=\"center\">iMac 5K</td>\n  <td align=\"center\">27</td>\n  <td align=\"center\">2560x1440</td>\n  <td align=\"center\">@2x</td>\n</tr>  \n</tbody>  \n</table>\n\n<p><strong>由此可见，Bootstrap 并不能很好地对 iMac 系列一体机进行完美适配，因为 1200px 的响应点无论是距离 1920px 还是 2560px，都有点远。</strong>为此，需要人工对照 iMac 几款机型分辨率和是否为 Retina 屏幕，一一设置媒体查询（Media Query），增加针对 iMac 的响应点。</p>\n\n<pre><code class=\"language-CSS\">// 针对 iMac 21 寸，需要 1920px 宽度的背景图片\n@media only screen and ( min-width: 1920px )\n\n// 针对 iMac 27 寸，需要 2560px 宽度的背景图片\n@media only screen and ( min-width: 2560px )\n\n// 针对 iMac 4K，需要 4096px 宽度的背景图片，与下面比较接近，可取中间值，保留一份即可\n@media only screen and ( min-width: 2048px ) and ( min-resolution: 2dppx ),\n@media only screen and ( min-width: 2048px ) and ( min-device-pixel-ratio: 2 )\n\n// 针对 iMac 5K，需要 5120px 宽度的背景图片，与上面比较接近，可取中间值，保留一份即可\n@media only screen and ( min-width: 2560px ) and ( min-resolution: 2dppx ),\n@media only screen and ( min-width: 2560px ) and ( min-device-pixel-ratio: 2 )\n</code></pre>\n\n<h4 id=\"fontfamily\">全平台兼容的 @font-family</h4>\n\n<p>OS X El Capitan 的发布，带来了苹果新一代字体：中文字体的<strong><code>苹方</code></strong>、西文字体的<strong><code>San Francisco</code></strong>。<strong>那么，能兼容目前所有平台的网页字体是如何设置的呢？</strong></p>\n\n<p>这里提供一个方案：</p>\n\n<pre><code class=\"language-CSS\">html, body {  \n    font-family: \"San Francisco\", \"Helvetica Neue\", \"Lucida Grande\", \"Segoe UI\", \"PingFang SC\", \"Hiragino Sans GB\", \"Heiti SC\", \"WenQuanYi Microhei\", \"Microsoft Yahei\", Arial, sans-serif;\n}\n</code></pre>\n\n<p><strong>稍微解释一下：</strong></p>\n\n<blockquote>\n  <p><code>San Francisco</code> 放首位，用于检测操作系统是否为最新的 <code>El Capitan</code>，否则退而求其次，使用<code>Helvetica Neue</code>（苹果设备目前就这两种默认西文字体）。<code>Lucida Grande</code> 主要用于适配 <code>Ubuntu</code> 系统的西文字体，Windows 系统并不自带此字体，所以并不会 fallback 到 Windows 上来。<code>Segoe UI</code> 是自 Windows Vista 操作系统以来的默认 Windows 西文字体。\n  <br /> <br />\n  接着到中文字体部分：<code>PingFang SC</code> 放首位，依然为了适配苹果设备，否则退而求其次，使用<code>Hiragino Sans GB</code>（冬青黑体。之前 OS X 默认中文字体）；<code>Heiti SC</code> 主要是为了适配 iOS9 之前版本的 iOS 系统机型。<code>WenQuanYi Microhei</code>（文泉驿微黑） 是某些 Linux 系列操作系统的默认中文字体。<code>Microsoft Yahei</code> 是自 Windows Vista 以来 Windows 默认中文字体。最后的 <code>Arial</code> 和 <code>sans-serif</code> 是最后一道 fallback，用于 Windows XP 以及完全没有以上中文字体的操作系统使用。\n  <br /> <br />\n  <strong>如果在项目中使用了字体子集化方案，可以在<code>微软雅黑</code>之前放入自定义字体。</strong>对于苹果系统，建议保持其系统默认字体设置，不强制使用自定义字体；对于 Windows、android，建议能使用自定义字体即使用。</p>\n</blockquote>\n\n<h2 id=\"\">共同进步</h2>\n\n<p>若有错误之处，欢迎指出，我们共同进步！</p>","image":"/content/images/2015/11/LargeScreen-Preview.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":"平行空间大事记暨官网上线历程","meta_description":"记录平行空间官网上线历程及半年大事记。平行空间，是惠州学院最具活力的互联网创意实验室。曾登上爱范儿 MindStore。旗下拥有惠大微报、嗨·惠大、香蕉实验室等","author_id":1,"created_at":1447450961078,"created_by":1,"updated_at":1447454173932,"updated_by":1,"published_at":1447451541685,"published_by":1}],"users":[{"id":1,"uuid":"f867c88a-f96a-443a-872a-66a0f7b7e020","name":"Loyalsoldier","slug":"loyalsoldier","password":"$2a$10$DkjU/DjanP0xnlA0K8zFWOuirh4rH.SkM2/vBvKQkRZIltzzflO2O","email":"loyalsoldier@qq.com","image":"/content/images/2015/11/avatar-1.jpg","cover":"/content/images/2015/10/Mybg-1.jpg","bio":"死飞，设计，编码，音乐……美物都值得善待。","website":"http://github.com/Loyalsoldier","location":"广州","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":1447450920808,"created_at":1446102587690,"created_by":1,"updated_at":1447450920809,"updated_by":1}],"roles":[{"id":1,"uuid":"10735db8-80b6-4ae2-a81b-b14f9b243b88","name":"Administrator","description":"管理员","created_at":1446102586547,"created_by":1,"updated_at":1446102586547,"updated_by":1},{"id":2,"uuid":"09439311-57a3-4f93-bf14-35833b344293","name":"Editor","description":"编辑","created_at":1446102586548,"created_by":1,"updated_at":1446102586548,"updated_by":1},{"id":3,"uuid":"c3a7973e-719c-46c1-bb18-f9b633c73c99","name":"Author","description":"作者","created_at":1446102586548,"created_by":1,"updated_at":1446102586548,"updated_by":1},{"id":4,"uuid":"0272c0e6-3053-49d9-805f-2f36ed2572cd","name":"Owner","description":"博客所有者","created_at":1446102586548,"created_by":1,"updated_at":1446102586548,"updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"permissions":[{"id":1,"uuid":"068846f6-bcb0-42e2-9789-4ceae1dc0e1a","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":1446102586700,"created_by":1,"updated_at":1446102586700,"updated_by":1},{"id":2,"uuid":"0a76a202-b386-46f4-8132-a1bd655e37c5","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":1446102586707,"created_by":1,"updated_at":1446102586707,"updated_by":1},{"id":3,"uuid":"a2a3b62f-b172-43c4-a7f6-601271754acd","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":1446102586715,"created_by":1,"updated_at":1446102586715,"updated_by":1},{"id":4,"uuid":"a0462954-e039-467b-b7e4-7de7b4dfdf83","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":1446102586722,"created_by":1,"updated_at":1446102586722,"updated_by":1},{"id":5,"uuid":"d8810a11-c93f-4f5f-b082-efe22bbe3360","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":1446102586729,"created_by":1,"updated_at":1446102586729,"updated_by":1},{"id":6,"uuid":"5b7999d7-9961-4b3a-b65c-08d034696c1b","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":1446102586737,"created_by":1,"updated_at":1446102586737,"updated_by":1},{"id":7,"uuid":"589aed91-7009-420d-8136-e2debcbb6125","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":1446102586745,"created_by":1,"updated_at":1446102586745,"updated_by":1},{"id":8,"uuid":"92dee64e-c8d3-42b9-95da-51e494ee6e2d","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":1446102586760,"created_by":1,"updated_at":1446102586760,"updated_by":1},{"id":9,"uuid":"019657f8-fe9c-4146-8c98-3faf3bc490f3","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":1446102586770,"created_by":1,"updated_at":1446102586770,"updated_by":1},{"id":10,"uuid":"64026c6a-b6a9-458a-bffc-61cb5294761d","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1446102586779,"created_by":1,"updated_at":1446102586779,"updated_by":1},{"id":11,"uuid":"59846b1c-2cac-4279-b4a8-6ef8f3d2a0c5","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":1446102586786,"created_by":1,"updated_at":1446102586786,"updated_by":1},{"id":12,"uuid":"d594e486-5c52-4e8f-b1db-5a760eda1cf6","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":1446102586794,"created_by":1,"updated_at":1446102586794,"updated_by":1},{"id":13,"uuid":"abcb9b25-2434-4a81-a815-9603527fe719","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":1446102586802,"created_by":1,"updated_at":1446102586802,"updated_by":1},{"id":14,"uuid":"d96487e2-d3b4-4f4d-ae13-28e91f3eba85","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":1446102586812,"created_by":1,"updated_at":1446102586812,"updated_by":1},{"id":15,"uuid":"adf57c82-ff36-45fa-ad89-861b7bb28edd","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":1446102586824,"created_by":1,"updated_at":1446102586824,"updated_by":1},{"id":16,"uuid":"d4b17a5c-a294-401e-827a-c9776acd862a","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":1446102586833,"created_by":1,"updated_at":1446102586833,"updated_by":1},{"id":17,"uuid":"b9252c68-c1fc-47b8-b050-3279848c65fd","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":1446102586842,"created_by":1,"updated_at":1446102586842,"updated_by":1},{"id":18,"uuid":"840f0f28-68ec-469d-a87f-c1820347ff3d","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":1446102586852,"created_by":1,"updated_at":1446102586852,"updated_by":1},{"id":19,"uuid":"1a18145b-b9aa-4d1f-b923-2277effcc49a","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":1446102586863,"created_by":1,"updated_at":1446102586863,"updated_by":1},{"id":20,"uuid":"09427b21-5fb4-42f7-b790-d7b74e7c8b8e","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":1446102586873,"created_by":1,"updated_at":1446102586873,"updated_by":1},{"id":21,"uuid":"582dedc2-375f-4bbe-a317-04f61163a488","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":1446102586883,"created_by":1,"updated_at":1446102586883,"updated_by":1},{"id":22,"uuid":"063fbc86-5871-4557-a520-c6cf9d735fbc","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":1446102586895,"created_by":1,"updated_at":1446102586895,"updated_by":1},{"id":23,"uuid":"cfcdedf2-1e1b-42fb-a773-cd3b8b54c0c9","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":1446102586904,"created_by":1,"updated_at":1446102586904,"updated_by":1},{"id":24,"uuid":"1c1e6cc2-2d49-4cd7-b164-e1f1a0eb3f49","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":1446102586915,"created_by":1,"updated_at":1446102586915,"updated_by":1},{"id":25,"uuid":"48dd507d-72c7-4cbf-956a-2ced9ff72147","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":1446102586924,"created_by":1,"updated_at":1446102586924,"updated_by":1},{"id":26,"uuid":"563ca25c-f5aa-471b-8610-abaa6687611f","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":1446102586933,"created_by":1,"updated_at":1446102586933,"updated_by":1},{"id":27,"uuid":"28f257fa-c81e-4604-a2a8-c388cf5b33e8","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":1446102586942,"created_by":1,"updated_at":1446102586942,"updated_by":1},{"id":28,"uuid":"07777446-a9f5-421e-b515-1713912746a5","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":1446102586953,"created_by":1,"updated_at":1446102586953,"updated_by":1},{"id":29,"uuid":"94d6d80e-0559-4db5-98cc-f0ad0f68a9aa","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":1446102586960,"created_by":1,"updated_at":1446102586960,"updated_by":1},{"id":30,"uuid":"489188b9-3b51-4d34-a7d3-b8fdd1b83f39","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":1446102586965,"created_by":1,"updated_at":1446102586965,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":2,"permission_id":8},{"id":32,"role_id":2,"permission_id":9},{"id":33,"role_id":2,"permission_id":10},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":16},{"id":39,"role_id":2,"permission_id":17},{"id":40,"role_id":2,"permission_id":18},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":24},{"id":45,"role_id":2,"permission_id":25},{"id":46,"role_id":2,"permission_id":26},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":3,"permission_id":8},{"id":52,"role_id":3,"permission_id":9},{"id":53,"role_id":3,"permission_id":11},{"id":54,"role_id":3,"permission_id":13},{"id":55,"role_id":3,"permission_id":14},{"id":56,"role_id":3,"permission_id":16},{"id":57,"role_id":3,"permission_id":17},{"id":58,"role_id":3,"permission_id":18},{"id":59,"role_id":3,"permission_id":20},{"id":60,"role_id":3,"permission_id":24},{"id":61,"role_id":3,"permission_id":25},{"id":62,"role_id":3,"permission_id":30}],"permissions_apps":[],"settings":[{"id":1,"uuid":"707c99c1-b671-43d3-9849-3debbd09fb47","key":"databaseVersion","value":"003","type":"core","created_at":1446102587711,"created_by":1,"updated_at":1446102587711,"updated_by":1},{"id":2,"uuid":"2d78b224-f39f-4459-b58e-3f913798d49a","key":"dbHash","value":"231e1237-1c6e-4016-bcfa-5b65f8ba9daa","type":"core","created_at":1446102587721,"created_by":1,"updated_at":1446102587955,"updated_by":1},{"id":3,"uuid":"ebaed39e-4044-4ede-ac60-a6a74ca7d4cd","key":"nextUpdateCheck","value":"1447537311","type":"core","created_at":1446102587721,"created_by":1,"updated_at":1447450907542,"updated_by":1},{"id":4,"uuid":"d89412f8-f7ea-4536-85a3-4082d84b5d29","key":"displayUpdateNotification","value":"0.5.3-zh-rc1","type":"core","created_at":1446102587721,"created_by":1,"updated_at":1447450907559,"updated_by":1},{"id":5,"uuid":"b2f78e9b-cae2-465e-9330-f5c33a1c224d","key":"title","value":"前端养成记","type":"blog","created_at":1446102587722,"created_by":1,"updated_at":1446917442091,"updated_by":1},{"id":6,"uuid":"314f85de-051b-4648-b911-31a71f64e404","key":"description","value":"关于网页重构、前端开发、设计等","type":"blog","created_at":1446102587723,"created_by":1,"updated_at":1446917442092,"updated_by":1},{"id":7,"uuid":"b68a0245-207d-4fb5-9fa0-fc4c8c7dfc41","key":"email","value":"loyalsoldier@qq.com","type":"blog","created_at":1446102587723,"created_by":1,"updated_at":1446917442092,"updated_by":1},{"id":8,"uuid":"e398f3f9-edab-482c-b32a-2967277aef81","key":"logo","value":"","type":"blog","created_at":1446102587723,"created_by":1,"updated_at":1446917442093,"updated_by":1},{"id":9,"uuid":"f12152a1-c1c0-4c02-8eb2-c71fb96e0b3c","key":"cover","value":"/content/images/2015/10/bg-2880-1366.jpg","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442096,"updated_by":1},{"id":10,"uuid":"76de07d6-dbdc-441a-9043-91f766184c0c","key":"defaultLang","value":"en_US","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442097,"updated_by":1},{"id":11,"uuid":"cf87d301-aa31-4139-964b-43a54a626243","key":"postsPerPage","value":"5","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442100,"updated_by":1},{"id":12,"uuid":"d91a36e4-734a-4f85-9048-8035cfd2a7ea","key":"forceI18n","value":"true","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442102,"updated_by":1},{"id":13,"uuid":"b10f3149-8476-4e93-bee4-a699080f296b","key":"permalinks","value":"/:slug/","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442104,"updated_by":1},{"id":14,"uuid":"752b6024-78ab-4186-bbec-c5ef6ca913a2","key":"ghost_head","value":"","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442107,"updated_by":1},{"id":15,"uuid":"d6c20df1-58a9-4d1e-8063-33b787fab897","key":"ghost_foot","value":"<div style=\"display: none\"><script type=\"text/javascript\">var cnzz_protocol = ((\"https:\" == document.location.protocol) ? \" https://\" : \" http://\");document.write(unescape(\"%3Cspan id='cnzz_stat_icon_1256670649'%3E%3C/span%3E%3Cscript src='\" + cnzz_protocol + \"s95.cnzz.com/z_stat.php%3Fid%3D1256670649' type='text/javascript'%3E%3C/script%3E\"));</script></div>","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442107,"updated_by":1},{"id":16,"uuid":"37e9ccb7-e124-4962-9833-38fe66d8b5f6","key":"labs","value":"{}","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442108,"updated_by":1},{"id":17,"uuid":"143f76f4-4699-4f9f-8b61-48ec396ec0ab","key":"navigation","value":"[{\"label\":\"首页\",\"url\":\"/\"},{\"label\":\"Github\",\"url\":\"https://github.com/Loyalsoldier\"}]","type":"blog","created_at":1446102587724,"created_by":1,"updated_at":1446917442108,"updated_by":1},{"id":18,"uuid":"437ca195-a8e5-4488-80f8-1c448c39c7b8","key":"isPrivate","value":"false","type":"blog","created_at":1446102587725,"created_by":1,"updated_at":1446917442109,"updated_by":1},{"id":19,"uuid":"52e66447-18b8-49fc-8483-b0d63db3106f","key":"password","value":"mehegi662","type":"blog","created_at":1446102587725,"created_by":1,"updated_at":1446917442110,"updated_by":1},{"id":20,"uuid":"a38676ec-e459-405c-b76a-be1c84cddfaf","key":"activeApps","value":"[]","type":"app","created_at":1446102587725,"created_by":1,"updated_at":1446102587725,"updated_by":1},{"id":21,"uuid":"32c78284-7047-4b74-8ebd-5d024aadaad0","key":"installedApps","value":"[]","type":"app","created_at":1446102587725,"created_by":1,"updated_at":1452273920012,"updated_by":1},{"id":22,"uuid":"591eecc0-9de7-43ac-8360-4dfc62c83d24","key":"activeTheme","value":"casper","type":"theme","created_at":1446102587725,"created_by":1,"updated_at":1446917442106,"updated_by":1}],"tags":[{"id":3,"uuid":"0d3b77a5-e3d2-49d7-aa50-5b267012aa01","name":"前端开发","slug":"qian-duan-kai-fa","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446363643026,"created_by":1,"updated_at":1446363643026,"updated_by":1},{"id":4,"uuid":"4dbd1cd2-fbfe-4261-bb2f-6700895318d3","name":"Ghost","slug":"ghost-tag","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446363891620,"created_by":1,"updated_at":1446363891620,"updated_by":1},{"id":5,"uuid":"1e6e34a4-6d39-4fde-931b-f72af039a506","name":"博客","slug":"bo-ke","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446363891639,"created_by":1,"updated_at":1446363891639,"updated_by":1},{"id":8,"uuid":"ec890f72-90c8-4177-9d90-8e42c82b17bb","name":"Github Pages","slug":"github-pages","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446363891692,"created_by":1,"updated_at":1446363891692,"updated_by":1},{"id":12,"uuid":"8094f990-5257-4e06-a744-2a90812fb947","name":"电脑","slug":"dian-nao","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446649813712,"created_by":1,"updated_at":1446649813712,"updated_by":1},{"id":13,"uuid":"7f324ba4-e340-4a21-9769-f93c8963aa32","name":"性能","slug":"xing-neng","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446649813751,"created_by":1,"updated_at":1446649813751,"updated_by":1},{"id":14,"uuid":"c11e6a69-4f65-4a65-800e-6e04e645ec4b","name":"维护","slug":"wei-hu","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446649813777,"created_by":1,"updated_at":1446649813777,"updated_by":1},{"id":15,"uuid":"a813a839-56b7-4385-9c9d-064a27b296db","name":"美物推荐","slug":"mei-wu-tui-jian","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446649813805,"created_by":1,"updated_at":1446649813805,"updated_by":1},{"id":16,"uuid":"db89e25c-fa21-4f04-8edd-356928b86391","name":"Buster.py","slug":"buster-py","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1446804037708,"created_by":1,"updated_at":1446804037708,"updated_by":1},{"id":17,"uuid":"64193377-292d-4650-a4a4-62923dacb0bb","name":"平行空间","slug":"ping-xing-kong-jian","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1447451396770,"created_by":1,"updated_at":1447451396770,"updated_by":1},{"id":18,"uuid":"9c518016-259a-453a-b637-fb631a5c828f","name":"大事记","slug":"da-shi-ji","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1447451396784,"created_by":1,"updated_at":1447451396784,"updated_by":1},{"id":19,"uuid":"cf85228a-db85-45ec-8e62-486c807d5541","name":"上线","slug":"shang-xian","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1447451396797,"created_by":1,"updated_at":1447451396797,"updated_by":1},{"id":20,"uuid":"f4b06672-df1a-4db4-89d9-a2f2193ecf0f","name":"字体子集化","slug":"zi-ti-zi-ji-hua","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1447451396812,"created_by":1,"updated_at":1447451396812,"updated_by":1},{"id":21,"uuid":"d30216aa-93fb-4e90-a2e0-6ab99bea85cf","name":"Fontmin","slug":"fontmin","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1447451396828,"created_by":1,"updated_at":1447451396828,"updated_by":1},{"id":22,"uuid":"6ee817b8-75b9-435b-9a64-07ab48172fd8","name":"中文字体","slug":"zhong-wen-zi-ti","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1447451541715,"created_by":1,"updated_at":1447451541715,"updated_by":1}],"posts_tags":[{"id":8,"post_id":2,"tag_id":3},{"id":843,"post_id":3,"tag_id":4},{"id":844,"post_id":3,"tag_id":5},{"id":845,"post_id":3,"tag_id":8},{"id":846,"post_id":3,"tag_id":16},{"id":887,"post_id":4,"tag_id":12},{"id":888,"post_id":4,"tag_id":13},{"id":889,"post_id":4,"tag_id":14},{"id":890,"post_id":4,"tag_id":15},{"id":1356,"post_id":5,"tag_id":17},{"id":1357,"post_id":5,"tag_id":18},{"id":1358,"post_id":5,"tag_id":19},{"id":1359,"post_id":5,"tag_id":21},{"id":1360,"post_id":5,"tag_id":22}],"apps":[],"app_settings":[],"app_fields":[]}}